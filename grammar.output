Terminals unused in grammar

   STRING
   PROGRAM
   BREAK
   NEXT
   RETURN
   BORN
   PUFF
   READ
   WRITE
   CALL


State 59 conflicts: 1 shift/reduce


Grammar

    0 $accept: block $end

    1 block: '{' ins_list '}'
    2      | subrout_def

    3 ins_list: instruction NL
    4         | ins_list NL instruction NL

    5 instruction: declaration
    6            | assignment
    7            | selection
    8            | iteration
    9            | block

   10 declaration: type id_list
   11            | type id_list '=' expr
   12            | type ID dimension
   13            | type ID dimension '=' expr
   14            | type point_d ID
   15            | s_c ID '{' dcl_list '}'

   16 dcl_list: declaration
   17         | dcl_list declaration

   18 s_c: STRUCT
   19    | CONFEDERATION

   20 point_d: '*'
   21        | point_d '*'

   22 dimension: '[' NUMBER ']'
   23          | dimension '[' NUMBER ']'

   24 id_list: ID
   25        | id_list ',' ID

   26 type: HOLLOW
   27     | INT
   28     | CHAR
   29     | FLOAT
   30     | BOOL

   31 assignment: ID '=' expr
   32           | ID PLUS_ASSIGN expr
   33           | ID MINUS_ASSIGN expr
   34           | ID MULT_ASSIGN expr
   35           | ID DIV_ASSIGN expr

   36 iteration: WHILE expr block
   37          | FOR for_args TO for_args block
   38          | FOR for_args TO for_args STEP NUMBER block

   39 for_args: %empty

   40 expr: declaration

   41 selection: IF expr block elif_stm ELSE block
   42          | IF expr block elif_stm
   43          | IF expr block ELSE block
   44          | IF expr block

   45 elif_stm: ELIF expr block
   46         | elif_stm ELIF expr block

   47 expr: literal
   48     | ID
   49     | subrout_call
   50     | expr '+' expr
   51     | expr '-' expr
   52     | expr '*' expr
   53     | expr '/' expr
   54     | expr '%' expr
   55     | '-' expr
   56     | '(' expr ')'
   57     | '~' expr
   58     | expr AND expr
   59     | expr OR expr
   60     | expr LTOE expr
   61     | expr GTOE expr
   62     | expr EQUAL expr
   63     | expr UNEQUAL expr
   64     | expr '<' expr
   65     | expr '>' expr

   66 subrout_def: FUNC ID '(' args_func ')' ARROW type block
   67            | PROC ID '(' args_proc ')' block

   68 arg_val: type ID

   69 arg_ref: REF arg_val

   70 args_func: %empty
   71          | arg_val
   72          | args_func ',' arg_val

   73 args_proc: %empty
   74          | arg_val
   75          | args_proc ',' arg_val
   76          | arg_ref
   77          | args_proc ',' arg_ref

   78 args_list: expr
   79          | args_list ',' expr

   80 subrout_call: ID '(' args_list ')'

   81 literal: NUMBER
   82        | REAL
   83        | CHARACTER
   84        | JTRUE
   85        | JFALSE
   86        | JNULL


Terminals, with rules where they appear

$end (0) 0
'%' (37) 54
'(' (40) 56 66 67 80
')' (41) 56 66 67 80
'*' (42) 20 21 52
'+' (43) 50
',' (44) 25 72 75 77 79
'-' (45) 51 55
'/' (47) 53
'<' (60) 64
'=' (61) 11 13 31
'>' (62) 65
'[' (91) 22 23
']' (93) 22 23
'{' (123) 1 15
'}' (125) 1 15
'~' (126) 57
error (256)
NUMBER (258) 22 23 38 81
REAL (259) 82
ID (260) 12 13 14 15 24 25 31 32 33 34 35 48 66 67 68 80
STRING (261)
CHARACTER (262) 83
PROGRAM (263)
NL (264) 3 4
BOOL (265) 30
CHAR (266) 28
FLOAT (267) 29
INT (268) 27
HOLLOW (269) 26
CONFEDERATION (270) 19
STRUCT (271) 18
IF (272) 41 42 43 44
ELIF (273) 45 46
ELSE (274) 41 43
JFALSE (275) 85
JTRUE (276) 84
JNULL (277) 86
FOR (278) 37 38
WHILE (279) 36
TO (280) 37 38
STEP (281) 38
BREAK (282)
NEXT (283)
FUNC (284) 66
PROC (285) 67
REF (286) 69
RETURN (287)
BORN (288)
PUFF (289)
READ (290)
WRITE (291)
LTOE (292) 60
GTOE (293) 61
EQUAL (294) 62
UNEQUAL (295) 63
AND (296) 58
OR (297) 59
PLUS_ASSIGN (298) 32
MINUS_ASSIGN (299) 33
MULT_ASSIGN (300) 34
DIV_ASSIGN (301) 35
ARROW (302) 66
UNARY (303)
CALL (304)


Nonterminals, with rules where they appear

$accept (66)
    on left: 0
block (67)
    on left: 1 2, on right: 0 9 36 37 38 41 42 43 44 45 46 66 67
ins_list (68)
    on left: 3 4, on right: 1 4
instruction (69)
    on left: 5 6 7 8 9, on right: 3 4
declaration (70)
    on left: 10 11 12 13 14 15, on right: 5 16 17 40
dcl_list (71)
    on left: 16 17, on right: 15 17
s_c (72)
    on left: 18 19, on right: 15
point_d (73)
    on left: 20 21, on right: 14 21
dimension (74)
    on left: 22 23, on right: 12 13 23
id_list (75)
    on left: 24 25, on right: 10 11 25
type (76)
    on left: 26 27 28 29 30, on right: 10 11 12 13 14 66 68
assignment (77)
    on left: 31 32 33 34 35, on right: 6
iteration (78)
    on left: 36 37 38, on right: 8
for_args (79)
    on left: 39, on right: 37 38
expr (80)
    on left: 40 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63
    64 65, on right: 11 13 31 32 33 34 35 36 41 42 43 44 45 46 50 51
    52 53 54 55 56 57 58 59 60 61 62 63 64 65 78 79
selection (81)
    on left: 41 42 43 44, on right: 7
elif_stm (82)
    on left: 45 46, on right: 41 42 46
subrout_def (83)
    on left: 66 67, on right: 2
arg_val (84)
    on left: 68, on right: 69 71 72 74 75
arg_ref (85)
    on left: 69, on right: 76 77
args_func (86)
    on left: 70 71 72, on right: 66 72
args_proc (87)
    on left: 73 74 75 76 77, on right: 67 75 77
args_list (88)
    on left: 78 79, on right: 79 80
subrout_call (89)
    on left: 80, on right: 49
literal (90)
    on left: 81 82 83 84 85 86, on right: 47


State 0

    0 $accept: . block $end

    FUNC  shift, and go to state 1
    PROC  shift, and go to state 2
    '{'   shift, and go to state 3

    block        go to state 4
    subrout_def  go to state 5


State 1

   66 subrout_def: FUNC . ID '(' args_func ')' ARROW type block

    ID  shift, and go to state 6


State 2

   67 subrout_def: PROC . ID '(' args_proc ')' block

    ID  shift, and go to state 7


State 3

    1 block: '{' . ins_list '}'

    ID             shift, and go to state 8
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    IF             shift, and go to state 16
    FOR            shift, and go to state 17
    WHILE          shift, and go to state 18
    FUNC           shift, and go to state 1
    PROC           shift, and go to state 2
    '{'            shift, and go to state 3

    block        go to state 19
    ins_list     go to state 20
    instruction  go to state 21
    declaration  go to state 22
    s_c          go to state 23
    type         go to state 24
    assignment   go to state 25
    iteration    go to state 26
    selection    go to state 27
    subrout_def  go to state 5


State 4

    0 $accept: block . $end

    $end  shift, and go to state 28


State 5

    2 block: subrout_def .

    $default  reduce using rule 2 (block)


State 6

   66 subrout_def: FUNC ID . '(' args_func ')' ARROW type block

    '('  shift, and go to state 29


State 7

   67 subrout_def: PROC ID . '(' args_proc ')' block

    '('  shift, and go to state 30


State 8

   31 assignment: ID . '=' expr
   32           | ID . PLUS_ASSIGN expr
   33           | ID . MINUS_ASSIGN expr
   34           | ID . MULT_ASSIGN expr
   35           | ID . DIV_ASSIGN expr

    PLUS_ASSIGN   shift, and go to state 31
    MINUS_ASSIGN  shift, and go to state 32
    MULT_ASSIGN   shift, and go to state 33
    DIV_ASSIGN    shift, and go to state 34
    '='           shift, and go to state 35


State 9

   30 type: BOOL .

    $default  reduce using rule 30 (type)


State 10

   28 type: CHAR .

    $default  reduce using rule 28 (type)


State 11

   29 type: FLOAT .

    $default  reduce using rule 29 (type)


State 12

   27 type: INT .

    $default  reduce using rule 27 (type)


State 13

   26 type: HOLLOW .

    $default  reduce using rule 26 (type)


State 14

   19 s_c: CONFEDERATION .

    $default  reduce using rule 19 (s_c)


State 15

   18 s_c: STRUCT .

    $default  reduce using rule 18 (s_c)


State 16

   41 selection: IF . expr block elif_stm ELSE block
   42          | IF . expr block elif_stm
   43          | IF . expr block ELSE block
   44          | IF . expr block

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 47
    subrout_call  go to state 48
    literal       go to state 49


State 17

   37 iteration: FOR . for_args TO for_args block
   38          | FOR . for_args TO for_args STEP NUMBER block

    $default  reduce using rule 39 (for_args)

    for_args  go to state 50


State 18

   36 iteration: WHILE . expr block

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 51
    subrout_call  go to state 48
    literal       go to state 49


State 19

    9 instruction: block .

    $default  reduce using rule 9 (instruction)


State 20

    1 block: '{' ins_list . '}'
    4 ins_list: ins_list . NL instruction NL

    NL   shift, and go to state 52
    '}'  shift, and go to state 53


State 21

    3 ins_list: instruction . NL

    NL  shift, and go to state 54


State 22

    5 instruction: declaration .

    $default  reduce using rule 5 (instruction)


State 23

   15 declaration: s_c . ID '{' dcl_list '}'

    ID  shift, and go to state 55


State 24

   10 declaration: type . id_list
   11            | type . id_list '=' expr
   12            | type . ID dimension
   13            | type . ID dimension '=' expr
   14            | type . point_d ID

    ID   shift, and go to state 56
    '*'  shift, and go to state 57

    point_d  go to state 58
    id_list  go to state 59


State 25

    6 instruction: assignment .

    $default  reduce using rule 6 (instruction)


State 26

    8 instruction: iteration .

    $default  reduce using rule 8 (instruction)


State 27

    7 instruction: selection .

    $default  reduce using rule 7 (instruction)


State 28

    0 $accept: block $end .

    $default  accept


State 29

   66 subrout_def: FUNC ID '(' . args_func ')' ARROW type block

    BOOL    shift, and go to state 9
    CHAR    shift, and go to state 10
    FLOAT   shift, and go to state 11
    INT     shift, and go to state 12
    HOLLOW  shift, and go to state 13

    $default  reduce using rule 70 (args_func)

    type       go to state 60
    arg_val    go to state 61
    args_func  go to state 62


State 30

   67 subrout_def: PROC ID '(' . args_proc ')' block

    BOOL    shift, and go to state 9
    CHAR    shift, and go to state 10
    FLOAT   shift, and go to state 11
    INT     shift, and go to state 12
    HOLLOW  shift, and go to state 13
    REF     shift, and go to state 63

    $default  reduce using rule 73 (args_proc)

    type       go to state 60
    arg_val    go to state 64
    arg_ref    go to state 65
    args_proc  go to state 66


State 31

   32 assignment: ID PLUS_ASSIGN . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 67
    subrout_call  go to state 48
    literal       go to state 49


State 32

   33 assignment: ID MINUS_ASSIGN . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 68
    subrout_call  go to state 48
    literal       go to state 49


State 33

   34 assignment: ID MULT_ASSIGN . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 69
    subrout_call  go to state 48
    literal       go to state 49


State 34

   35 assignment: ID DIV_ASSIGN . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 70
    subrout_call  go to state 48
    literal       go to state 49


State 35

   31 assignment: ID '=' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 71
    subrout_call  go to state 48
    literal       go to state 49


State 36

   81 literal: NUMBER .

    $default  reduce using rule 81 (literal)


State 37

   82 literal: REAL .

    $default  reduce using rule 82 (literal)


State 38

   48 expr: ID .
   80 subrout_call: ID . '(' args_list ')'

    '('  shift, and go to state 72

    $default  reduce using rule 48 (expr)


State 39

   83 literal: CHARACTER .

    $default  reduce using rule 83 (literal)


State 40

   85 literal: JFALSE .

    $default  reduce using rule 85 (literal)


State 41

   84 literal: JTRUE .

    $default  reduce using rule 84 (literal)


State 42

   86 literal: JNULL .

    $default  reduce using rule 86 (literal)


State 43

   55 expr: '-' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 73
    subrout_call  go to state 48
    literal       go to state 49


State 44

   56 expr: '(' . expr ')'

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 74
    subrout_call  go to state 48
    literal       go to state 49


State 45

   57 expr: '~' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 75
    subrout_call  go to state 48
    literal       go to state 49


State 46

   40 expr: declaration .

    $default  reduce using rule 40 (expr)


State 47

   41 selection: IF expr . block elif_stm ELSE block
   42          | IF expr . block elif_stm
   43          | IF expr . block ELSE block
   44          | IF expr . block
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr

    FUNC     shift, and go to state 1
    PROC     shift, and go to state 2
    LTOE     shift, and go to state 76
    GTOE     shift, and go to state 77
    EQUAL    shift, and go to state 78
    UNEQUAL  shift, and go to state 79
    AND      shift, and go to state 80
    OR       shift, and go to state 81
    '>'      shift, and go to state 82
    '<'      shift, and go to state 83
    '+'      shift, and go to state 84
    '-'      shift, and go to state 85
    '*'      shift, and go to state 86
    '/'      shift, and go to state 87
    '%'      shift, and go to state 88
    '{'      shift, and go to state 3

    block        go to state 89
    subrout_def  go to state 5


State 48

   49 expr: subrout_call .

    $default  reduce using rule 49 (expr)


State 49

   47 expr: literal .

    $default  reduce using rule 47 (expr)


State 50

   37 iteration: FOR for_args . TO for_args block
   38          | FOR for_args . TO for_args STEP NUMBER block

    TO  shift, and go to state 90


State 51

   36 iteration: WHILE expr . block
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr

    FUNC     shift, and go to state 1
    PROC     shift, and go to state 2
    LTOE     shift, and go to state 76
    GTOE     shift, and go to state 77
    EQUAL    shift, and go to state 78
    UNEQUAL  shift, and go to state 79
    AND      shift, and go to state 80
    OR       shift, and go to state 81
    '>'      shift, and go to state 82
    '<'      shift, and go to state 83
    '+'      shift, and go to state 84
    '-'      shift, and go to state 85
    '*'      shift, and go to state 86
    '/'      shift, and go to state 87
    '%'      shift, and go to state 88
    '{'      shift, and go to state 3

    block        go to state 91
    subrout_def  go to state 5


State 52

    4 ins_list: ins_list NL . instruction NL

    ID             shift, and go to state 8
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    IF             shift, and go to state 16
    FOR            shift, and go to state 17
    WHILE          shift, and go to state 18
    FUNC           shift, and go to state 1
    PROC           shift, and go to state 2
    '{'            shift, and go to state 3

    block        go to state 19
    instruction  go to state 92
    declaration  go to state 22
    s_c          go to state 23
    type         go to state 24
    assignment   go to state 25
    iteration    go to state 26
    selection    go to state 27
    subrout_def  go to state 5


State 53

    1 block: '{' ins_list '}' .

    $default  reduce using rule 1 (block)


State 54

    3 ins_list: instruction NL .

    $default  reduce using rule 3 (ins_list)


State 55

   15 declaration: s_c ID . '{' dcl_list '}'

    '{'  shift, and go to state 93


State 56

   12 declaration: type ID . dimension
   13            | type ID . dimension '=' expr
   24 id_list: ID .

    '['  shift, and go to state 94

    $default  reduce using rule 24 (id_list)

    dimension  go to state 95


State 57

   20 point_d: '*' .

    $default  reduce using rule 20 (point_d)


State 58

   14 declaration: type point_d . ID
   21 point_d: point_d . '*'

    ID   shift, and go to state 96
    '*'  shift, and go to state 97


State 59

   10 declaration: type id_list .
   11            | type id_list . '=' expr
   25 id_list: id_list . ',' ID

    '='  shift, and go to state 98
    ','  shift, and go to state 99

    ','       [reduce using rule 10 (declaration)]
    $default  reduce using rule 10 (declaration)


State 60

   68 arg_val: type . ID

    ID  shift, and go to state 100


State 61

   71 args_func: arg_val .

    $default  reduce using rule 71 (args_func)


State 62

   66 subrout_def: FUNC ID '(' args_func . ')' ARROW type block
   72 args_func: args_func . ',' arg_val

    ','  shift, and go to state 101
    ')'  shift, and go to state 102


State 63

   69 arg_ref: REF . arg_val

    BOOL    shift, and go to state 9
    CHAR    shift, and go to state 10
    FLOAT   shift, and go to state 11
    INT     shift, and go to state 12
    HOLLOW  shift, and go to state 13

    type     go to state 60
    arg_val  go to state 103


State 64

   74 args_proc: arg_val .

    $default  reduce using rule 74 (args_proc)


State 65

   76 args_proc: arg_ref .

    $default  reduce using rule 76 (args_proc)


State 66

   67 subrout_def: PROC ID '(' args_proc . ')' block
   75 args_proc: args_proc . ',' arg_val
   77          | args_proc . ',' arg_ref

    ','  shift, and go to state 104
    ')'  shift, and go to state 105


State 67

   32 assignment: ID PLUS_ASSIGN expr .
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr

    LTOE     shift, and go to state 76
    GTOE     shift, and go to state 77
    EQUAL    shift, and go to state 78
    UNEQUAL  shift, and go to state 79
    AND      shift, and go to state 80
    OR       shift, and go to state 81
    '>'      shift, and go to state 82
    '<'      shift, and go to state 83
    '+'      shift, and go to state 84
    '-'      shift, and go to state 85
    '*'      shift, and go to state 86
    '/'      shift, and go to state 87
    '%'      shift, and go to state 88

    $default  reduce using rule 32 (assignment)


State 68

   33 assignment: ID MINUS_ASSIGN expr .
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr

    LTOE     shift, and go to state 76
    GTOE     shift, and go to state 77
    EQUAL    shift, and go to state 78
    UNEQUAL  shift, and go to state 79
    AND      shift, and go to state 80
    OR       shift, and go to state 81
    '>'      shift, and go to state 82
    '<'      shift, and go to state 83
    '+'      shift, and go to state 84
    '-'      shift, and go to state 85
    '*'      shift, and go to state 86
    '/'      shift, and go to state 87
    '%'      shift, and go to state 88

    $default  reduce using rule 33 (assignment)


State 69

   34 assignment: ID MULT_ASSIGN expr .
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr

    LTOE     shift, and go to state 76
    GTOE     shift, and go to state 77
    EQUAL    shift, and go to state 78
    UNEQUAL  shift, and go to state 79
    AND      shift, and go to state 80
    OR       shift, and go to state 81
    '>'      shift, and go to state 82
    '<'      shift, and go to state 83
    '+'      shift, and go to state 84
    '-'      shift, and go to state 85
    '*'      shift, and go to state 86
    '/'      shift, and go to state 87
    '%'      shift, and go to state 88

    $default  reduce using rule 34 (assignment)


State 70

   35 assignment: ID DIV_ASSIGN expr .
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr

    LTOE     shift, and go to state 76
    GTOE     shift, and go to state 77
    EQUAL    shift, and go to state 78
    UNEQUAL  shift, and go to state 79
    AND      shift, and go to state 80
    OR       shift, and go to state 81
    '>'      shift, and go to state 82
    '<'      shift, and go to state 83
    '+'      shift, and go to state 84
    '-'      shift, and go to state 85
    '*'      shift, and go to state 86
    '/'      shift, and go to state 87
    '%'      shift, and go to state 88

    $default  reduce using rule 35 (assignment)


State 71

   31 assignment: ID '=' expr .
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr

    LTOE     shift, and go to state 76
    GTOE     shift, and go to state 77
    EQUAL    shift, and go to state 78
    UNEQUAL  shift, and go to state 79
    AND      shift, and go to state 80
    OR       shift, and go to state 81
    '>'      shift, and go to state 82
    '<'      shift, and go to state 83
    '+'      shift, and go to state 84
    '-'      shift, and go to state 85
    '*'      shift, and go to state 86
    '/'      shift, and go to state 87
    '%'      shift, and go to state 88

    $default  reduce using rule 31 (assignment)


State 72

   80 subrout_call: ID '(' . args_list ')'

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 106
    args_list     go to state 107
    subrout_call  go to state 48
    literal       go to state 49


State 73

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   55     | '-' expr .
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr

    $default  reduce using rule 55 (expr)


State 74

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   56     | '(' expr . ')'
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr

    LTOE     shift, and go to state 76
    GTOE     shift, and go to state 77
    EQUAL    shift, and go to state 78
    UNEQUAL  shift, and go to state 79
    AND      shift, and go to state 80
    OR       shift, and go to state 81
    '>'      shift, and go to state 82
    '<'      shift, and go to state 83
    '+'      shift, and go to state 84
    '-'      shift, and go to state 85
    '*'      shift, and go to state 86
    '/'      shift, and go to state 87
    '%'      shift, and go to state 88
    ')'      shift, and go to state 108


State 75

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   57     | '~' expr .
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr

    $default  reduce using rule 57 (expr)


State 76

   60 expr: expr LTOE . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 109
    subrout_call  go to state 48
    literal       go to state 49


State 77

   61 expr: expr GTOE . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 110
    subrout_call  go to state 48
    literal       go to state 49


State 78

   62 expr: expr EQUAL . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 111
    subrout_call  go to state 48
    literal       go to state 49


State 79

   63 expr: expr UNEQUAL . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 112
    subrout_call  go to state 48
    literal       go to state 49


State 80

   58 expr: expr AND . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 113
    subrout_call  go to state 48
    literal       go to state 49


State 81

   59 expr: expr OR . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 114
    subrout_call  go to state 48
    literal       go to state 49


State 82

   65 expr: expr '>' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 115
    subrout_call  go to state 48
    literal       go to state 49


State 83

   64 expr: expr '<' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 116
    subrout_call  go to state 48
    literal       go to state 49


State 84

   50 expr: expr '+' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 117
    subrout_call  go to state 48
    literal       go to state 49


State 85

   51 expr: expr '-' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 118
    subrout_call  go to state 48
    literal       go to state 49


State 86

   52 expr: expr '*' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 119
    subrout_call  go to state 48
    literal       go to state 49


State 87

   53 expr: expr '/' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 120
    subrout_call  go to state 48
    literal       go to state 49


State 88

   54 expr: expr '%' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 121
    subrout_call  go to state 48
    literal       go to state 49


State 89

   41 selection: IF expr block . elif_stm ELSE block
   42          | IF expr block . elif_stm
   43          | IF expr block . ELSE block
   44          | IF expr block .

    ELIF  shift, and go to state 122
    ELSE  shift, and go to state 123

    $default  reduce using rule 44 (selection)

    elif_stm  go to state 124


State 90

   37 iteration: FOR for_args TO . for_args block
   38          | FOR for_args TO . for_args STEP NUMBER block

    $default  reduce using rule 39 (for_args)

    for_args  go to state 125


State 91

   36 iteration: WHILE expr block .

    $default  reduce using rule 36 (iteration)


State 92

    4 ins_list: ins_list NL instruction . NL

    NL  shift, and go to state 126


State 93

   15 declaration: s_c ID '{' . dcl_list '}'

    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15

    declaration  go to state 127
    dcl_list     go to state 128
    s_c          go to state 23
    type         go to state 24


State 94

   22 dimension: '[' . NUMBER ']'

    NUMBER  shift, and go to state 129


State 95

   12 declaration: type ID dimension .
   13            | type ID dimension . '=' expr
   23 dimension: dimension . '[' NUMBER ']'

    '='  shift, and go to state 130
    '['  shift, and go to state 131

    $default  reduce using rule 12 (declaration)


State 96

   14 declaration: type point_d ID .

    $default  reduce using rule 14 (declaration)


State 97

   21 point_d: point_d '*' .

    $default  reduce using rule 21 (point_d)


State 98

   11 declaration: type id_list '=' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 132
    subrout_call  go to state 48
    literal       go to state 49


State 99

   25 id_list: id_list ',' . ID

    ID  shift, and go to state 133


State 100

   68 arg_val: type ID .

    $default  reduce using rule 68 (arg_val)


State 101

   72 args_func: args_func ',' . arg_val

    BOOL    shift, and go to state 9
    CHAR    shift, and go to state 10
    FLOAT   shift, and go to state 11
    INT     shift, and go to state 12
    HOLLOW  shift, and go to state 13

    type     go to state 60
    arg_val  go to state 134


State 102

   66 subrout_def: FUNC ID '(' args_func ')' . ARROW type block

    ARROW  shift, and go to state 135


State 103

   69 arg_ref: REF arg_val .

    $default  reduce using rule 69 (arg_ref)


State 104

   75 args_proc: args_proc ',' . arg_val
   77          | args_proc ',' . arg_ref

    BOOL    shift, and go to state 9
    CHAR    shift, and go to state 10
    FLOAT   shift, and go to state 11
    INT     shift, and go to state 12
    HOLLOW  shift, and go to state 13
    REF     shift, and go to state 63

    type     go to state 60
    arg_val  go to state 136
    arg_ref  go to state 137


State 105

   67 subrout_def: PROC ID '(' args_proc ')' . block

    FUNC  shift, and go to state 1
    PROC  shift, and go to state 2
    '{'   shift, and go to state 3

    block        go to state 138
    subrout_def  go to state 5


State 106

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   78 args_list: expr .

    LTOE     shift, and go to state 76
    GTOE     shift, and go to state 77
    EQUAL    shift, and go to state 78
    UNEQUAL  shift, and go to state 79
    AND      shift, and go to state 80
    OR       shift, and go to state 81
    '>'      shift, and go to state 82
    '<'      shift, and go to state 83
    '+'      shift, and go to state 84
    '-'      shift, and go to state 85
    '*'      shift, and go to state 86
    '/'      shift, and go to state 87
    '%'      shift, and go to state 88

    $default  reduce using rule 78 (args_list)


State 107

   79 args_list: args_list . ',' expr
   80 subrout_call: ID '(' args_list . ')'

    ','  shift, and go to state 139
    ')'  shift, and go to state 140


State 108

   56 expr: '(' expr ')' .

    $default  reduce using rule 56 (expr)


State 109

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   60     | expr LTOE expr .
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '%'  shift, and go to state 88

    LTOE  error (nonassociative)
    GTOE  error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 60 (expr)


State 110

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   61     | expr GTOE expr .
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '%'  shift, and go to state 88

    LTOE  error (nonassociative)
    GTOE  error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 61 (expr)


State 111

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   62     | expr EQUAL expr .
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr

    LTOE  shift, and go to state 76
    GTOE  shift, and go to state 77
    '>'   shift, and go to state 82
    '<'   shift, and go to state 83
    '+'   shift, and go to state 84
    '-'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '%'   shift, and go to state 88

    $default  reduce using rule 62 (expr)


State 112

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   63     | expr UNEQUAL expr .
   64     | expr . '<' expr
   65     | expr . '>' expr

    LTOE  shift, and go to state 76
    GTOE  shift, and go to state 77
    '>'   shift, and go to state 82
    '<'   shift, and go to state 83
    '+'   shift, and go to state 84
    '-'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '%'   shift, and go to state 88

    $default  reduce using rule 63 (expr)


State 113

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   58     | expr . AND expr
   58     | expr AND expr .
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr

    LTOE     shift, and go to state 76
    GTOE     shift, and go to state 77
    EQUAL    shift, and go to state 78
    UNEQUAL  shift, and go to state 79
    '>'      shift, and go to state 82
    '<'      shift, and go to state 83
    '+'      shift, and go to state 84
    '-'      shift, and go to state 85
    '*'      shift, and go to state 86
    '/'      shift, and go to state 87
    '%'      shift, and go to state 88

    $default  reduce using rule 58 (expr)


State 114

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   58     | expr . AND expr
   59     | expr . OR expr
   59     | expr OR expr .
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr

    LTOE     shift, and go to state 76
    GTOE     shift, and go to state 77
    EQUAL    shift, and go to state 78
    UNEQUAL  shift, and go to state 79
    AND      shift, and go to state 80
    '>'      shift, and go to state 82
    '<'      shift, and go to state 83
    '+'      shift, and go to state 84
    '-'      shift, and go to state 85
    '*'      shift, and go to state 86
    '/'      shift, and go to state 87
    '%'      shift, and go to state 88

    $default  reduce using rule 59 (expr)


State 115

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   65     | expr '>' expr .

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '%'  shift, and go to state 88

    LTOE  error (nonassociative)
    GTOE  error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 65 (expr)


State 116

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   64     | expr '<' expr .
   65     | expr . '>' expr

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '%'  shift, and go to state 88

    LTOE  error (nonassociative)
    GTOE  error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 64 (expr)


State 117

   50 expr: expr . '+' expr
   50     | expr '+' expr .
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr

    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '%'  shift, and go to state 88

    $default  reduce using rule 50 (expr)


State 118

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   51     | expr '-' expr .
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr

    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '%'  shift, and go to state 88

    $default  reduce using rule 51 (expr)


State 119

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   52     | expr '*' expr .
   53     | expr . '/' expr
   54     | expr . '%' expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr

    $default  reduce using rule 52 (expr)


State 120

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   53     | expr '/' expr .
   54     | expr . '%' expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr

    $default  reduce using rule 53 (expr)


State 121

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   54     | expr '%' expr .
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr

    $default  reduce using rule 54 (expr)


State 122

   45 elif_stm: ELIF . expr block

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 141
    subrout_call  go to state 48
    literal       go to state 49


State 123

   43 selection: IF expr block ELSE . block

    FUNC  shift, and go to state 1
    PROC  shift, and go to state 2
    '{'   shift, and go to state 3

    block        go to state 142
    subrout_def  go to state 5


State 124

   41 selection: IF expr block elif_stm . ELSE block
   42          | IF expr block elif_stm .
   46 elif_stm: elif_stm . ELIF expr block

    ELIF  shift, and go to state 143
    ELSE  shift, and go to state 144

    $default  reduce using rule 42 (selection)


State 125

   37 iteration: FOR for_args TO for_args . block
   38          | FOR for_args TO for_args . STEP NUMBER block

    STEP  shift, and go to state 145
    FUNC  shift, and go to state 1
    PROC  shift, and go to state 2
    '{'   shift, and go to state 3

    block        go to state 146
    subrout_def  go to state 5


State 126

    4 ins_list: ins_list NL instruction NL .

    $default  reduce using rule 4 (ins_list)


State 127

   16 dcl_list: declaration .

    $default  reduce using rule 16 (dcl_list)


State 128

   15 declaration: s_c ID '{' dcl_list . '}'
   17 dcl_list: dcl_list . declaration

    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    '}'            shift, and go to state 147

    declaration  go to state 148
    s_c          go to state 23
    type         go to state 24


State 129

   22 dimension: '[' NUMBER . ']'

    ']'  shift, and go to state 149


State 130

   13 declaration: type ID dimension '=' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 150
    subrout_call  go to state 48
    literal       go to state 49


State 131

   23 dimension: dimension '[' . NUMBER ']'

    NUMBER  shift, and go to state 151


State 132

   11 declaration: type id_list '=' expr .
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr

    LTOE     shift, and go to state 76
    GTOE     shift, and go to state 77
    EQUAL    shift, and go to state 78
    UNEQUAL  shift, and go to state 79
    AND      shift, and go to state 80
    OR       shift, and go to state 81
    '>'      shift, and go to state 82
    '<'      shift, and go to state 83
    '+'      shift, and go to state 84
    '-'      shift, and go to state 85
    '*'      shift, and go to state 86
    '/'      shift, and go to state 87
    '%'      shift, and go to state 88

    $default  reduce using rule 11 (declaration)


State 133

   25 id_list: id_list ',' ID .

    $default  reduce using rule 25 (id_list)


State 134

   72 args_func: args_func ',' arg_val .

    $default  reduce using rule 72 (args_func)


State 135

   66 subrout_def: FUNC ID '(' args_func ')' ARROW . type block

    BOOL    shift, and go to state 9
    CHAR    shift, and go to state 10
    FLOAT   shift, and go to state 11
    INT     shift, and go to state 12
    HOLLOW  shift, and go to state 13

    type  go to state 152


State 136

   75 args_proc: args_proc ',' arg_val .

    $default  reduce using rule 75 (args_proc)


State 137

   77 args_proc: args_proc ',' arg_ref .

    $default  reduce using rule 77 (args_proc)


State 138

   67 subrout_def: PROC ID '(' args_proc ')' block .

    $default  reduce using rule 67 (subrout_def)


State 139

   79 args_list: args_list ',' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 153
    subrout_call  go to state 48
    literal       go to state 49


State 140

   80 subrout_call: ID '(' args_list ')' .

    $default  reduce using rule 80 (subrout_call)


State 141

   45 elif_stm: ELIF expr . block
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr

    FUNC     shift, and go to state 1
    PROC     shift, and go to state 2
    LTOE     shift, and go to state 76
    GTOE     shift, and go to state 77
    EQUAL    shift, and go to state 78
    UNEQUAL  shift, and go to state 79
    AND      shift, and go to state 80
    OR       shift, and go to state 81
    '>'      shift, and go to state 82
    '<'      shift, and go to state 83
    '+'      shift, and go to state 84
    '-'      shift, and go to state 85
    '*'      shift, and go to state 86
    '/'      shift, and go to state 87
    '%'      shift, and go to state 88
    '{'      shift, and go to state 3

    block        go to state 154
    subrout_def  go to state 5


State 142

   43 selection: IF expr block ELSE block .

    $default  reduce using rule 43 (selection)


State 143

   46 elif_stm: elif_stm ELIF . expr block

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 155
    subrout_call  go to state 48
    literal       go to state 49


State 144

   41 selection: IF expr block elif_stm ELSE . block

    FUNC  shift, and go to state 1
    PROC  shift, and go to state 2
    '{'   shift, and go to state 3

    block        go to state 156
    subrout_def  go to state 5


State 145

   38 iteration: FOR for_args TO for_args STEP . NUMBER block

    NUMBER  shift, and go to state 157


State 146

   37 iteration: FOR for_args TO for_args block .

    $default  reduce using rule 37 (iteration)


State 147

   15 declaration: s_c ID '{' dcl_list '}' .

    $default  reduce using rule 15 (declaration)


State 148

   17 dcl_list: dcl_list declaration .

    $default  reduce using rule 17 (dcl_list)


State 149

   22 dimension: '[' NUMBER ']' .

    $default  reduce using rule 22 (dimension)


State 150

   13 declaration: type ID dimension '=' expr .
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr

    LTOE     shift, and go to state 76
    GTOE     shift, and go to state 77
    EQUAL    shift, and go to state 78
    UNEQUAL  shift, and go to state 79
    AND      shift, and go to state 80
    OR       shift, and go to state 81
    '>'      shift, and go to state 82
    '<'      shift, and go to state 83
    '+'      shift, and go to state 84
    '-'      shift, and go to state 85
    '*'      shift, and go to state 86
    '/'      shift, and go to state 87
    '%'      shift, and go to state 88

    $default  reduce using rule 13 (declaration)


State 151

   23 dimension: dimension '[' NUMBER . ']'

    ']'  shift, and go to state 158


State 152

   66 subrout_def: FUNC ID '(' args_func ')' ARROW type . block

    FUNC  shift, and go to state 1
    PROC  shift, and go to state 2
    '{'   shift, and go to state 3

    block        go to state 159
    subrout_def  go to state 5


State 153

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   79 args_list: args_list ',' expr .

    LTOE     shift, and go to state 76
    GTOE     shift, and go to state 77
    EQUAL    shift, and go to state 78
    UNEQUAL  shift, and go to state 79
    AND      shift, and go to state 80
    OR       shift, and go to state 81
    '>'      shift, and go to state 82
    '<'      shift, and go to state 83
    '+'      shift, and go to state 84
    '-'      shift, and go to state 85
    '*'      shift, and go to state 86
    '/'      shift, and go to state 87
    '%'      shift, and go to state 88

    $default  reduce using rule 79 (args_list)


State 154

   45 elif_stm: ELIF expr block .

    $default  reduce using rule 45 (elif_stm)


State 155

   46 elif_stm: elif_stm ELIF expr . block
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . LTOE expr
   61     | expr . GTOE expr
   62     | expr . EQUAL expr
   63     | expr . UNEQUAL expr
   64     | expr . '<' expr
   65     | expr . '>' expr

    FUNC     shift, and go to state 1
    PROC     shift, and go to state 2
    LTOE     shift, and go to state 76
    GTOE     shift, and go to state 77
    EQUAL    shift, and go to state 78
    UNEQUAL  shift, and go to state 79
    AND      shift, and go to state 80
    OR       shift, and go to state 81
    '>'      shift, and go to state 82
    '<'      shift, and go to state 83
    '+'      shift, and go to state 84
    '-'      shift, and go to state 85
    '*'      shift, and go to state 86
    '/'      shift, and go to state 87
    '%'      shift, and go to state 88
    '{'      shift, and go to state 3

    block        go to state 160
    subrout_def  go to state 5


State 156

   41 selection: IF expr block elif_stm ELSE block .

    $default  reduce using rule 41 (selection)


State 157

   38 iteration: FOR for_args TO for_args STEP NUMBER . block

    FUNC  shift, and go to state 1
    PROC  shift, and go to state 2
    '{'   shift, and go to state 3

    block        go to state 161
    subrout_def  go to state 5


State 158

   23 dimension: dimension '[' NUMBER ']' .

    $default  reduce using rule 23 (dimension)


State 159

   66 subrout_def: FUNC ID '(' args_func ')' ARROW type block .

    $default  reduce using rule 66 (subrout_def)


State 160

   46 elif_stm: elif_stm ELIF expr block .

    $default  reduce using rule 46 (elif_stm)


State 161

   38 iteration: FOR for_args TO for_args STEP NUMBER block .

    $default  reduce using rule 38 (iteration)
