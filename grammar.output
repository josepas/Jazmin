Grammar

    0 $accept: jaxmin $end

    1 jaxmin: definitions PROGRAM block
    2       | PROGRAM block

    3 definitions: subrout_def

    4 block: '{' ins_list '}'
    5      | subrout_def

    6 ins_list: instruction NL
    7         | ins_list NL instruction NL

    8 instruction: declaration
    9            | assignment
   10            | selection
   11            | iteration
   12            | block
   13            | jump
   14            | io_inst
   15            | malloc

   16 malloc: BORN type
   17       | PUFF '(' ID ')'

   18 io_inst: READ STRING ',' ID
   19        | WRITE STRING

   20 jump: NEXT
   21     | BREAK
   22     | RETURN
   23     | RETURN expr

   24 declaration: type ID
   25            | type ID '=' expr
   26            | type ID dimension
   27            | type ID dimension '=' expr
   28            | type point_d ID
   29            | s_c ID '{' dcl_list '}'
   30            | s_c ID ID

   31 dcl_list: declaration
   32         | dcl_list declaration

   33 s_c: STRUCT
   34    | CONFEDERATION

   35 point_d: '*'
   36        | point_d '*'

   37 dimension: '[' NUMBER ']'
   38          | dimension '[' NUMBER ']'

   39 type: HOLLOW
   40     | INT
   41     | CHAR
   42     | FLOAT
   43     | BOOL

   44 assignment: ID '=' expr
   45           | ID PLUS_ASSIGN expr
   46           | ID MINUS_ASSIGN expr
   47           | ID MULT_ASSIGN expr
   48           | ID DIV_ASSIGN expr

   49 iteration: WHILE expr block
   50          | FOR for_args TO for_args block
   51          | FOR for_args TO for_args STEP NUMBER block

   52 for_args: %empty

   53 expr: declaration

   54 selection: IF expr block elif_stm ELSE block
   55          | IF expr block elif_stm
   56          | IF expr block ELSE block
   57          | IF expr block

   58 elif_stm: ELIF expr block
   59         | elif_stm ELIF expr block

   60 expr: literal
   61     | ID
   62     | subrout_call
   63     | expr '+' expr
   64     | expr '-' expr
   65     | expr '*' expr
   66     | expr '/' expr
   67     | expr '%' expr
   68     | '-' expr
   69     | '(' expr ')'
   70     | '~' expr
   71     | expr AND expr
   72     | expr OR expr
   73     | expr LTOE expr
   74     | expr GTOE expr
   75     | expr EQUAL expr
   76     | expr UNEQUAL expr
   77     | expr '<' expr
   78     | expr '>' expr

   79 subrout_def: FUNC ID '(' args_func ')' ARROW type block
   80            | PROC ID '(' args_proc ')' block

   81 arg_val: type ID

   82 arg_ref: REF arg_val

   83 args_func: %empty
   84          | arg_val
   85          | args_func ',' arg_val

   86 args_proc: %empty
   87          | arg_val
   88          | args_proc ',' arg_val
   89          | arg_ref
   90          | args_proc ',' arg_ref

   91 args_list: expr
   92          | args_list ',' expr

   93 subrout_call: ID '(' args_list ')'

   94 literal: NUMBER
   95        | REAL
   96        | CHARACTER
   97        | JTRUE
   98        | JFALSE
   99        | JNULL


Terminals, with rules where they appear

$end (0) 0
'%' (37) 67
'(' (40) 17 69 79 80 93
')' (41) 17 69 79 80 93
'*' (42) 35 36 65
'+' (43) 63
',' (44) 18 85 88 90 92
'-' (45) 64 68
'/' (47) 66
'<' (60) 77
'=' (61) 25 27 44
'>' (62) 78
'[' (91) 37 38
']' (93) 37 38
'{' (123) 4 29
'}' (125) 4 29
'~' (126) 70
error (256)
NUMBER (258) 37 38 51 94
REAL (259) 95
ID (260) 17 18 24 25 26 27 28 29 30 44 45 46 47 48 61 79 80 81 93
STRING (261) 18 19
CHARACTER (262) 96
PROGRAM (263) 1 2
NL (264) 6 7
BOOL (265) 43
CHAR (266) 41
FLOAT (267) 42
INT (268) 40
HOLLOW (269) 39
CONFEDERATION (270) 34
STRUCT (271) 33
IF (272) 54 55 56 57
ELIF (273) 58 59
ELSE (274) 54 56
JFALSE (275) 98
JTRUE (276) 97
JNULL (277) 99
FOR (278) 50 51
WHILE (279) 49
TO (280) 50 51
STEP (281) 51
BREAK (282) 21
NEXT (283) 20
FUNC (284) 79
PROC (285) 80
REF (286) 82
RETURN (287) 22 23
BORN (288) 16
PUFF (289) 17
READ (290) 18
WRITE (291) 19
LTOE (292) 73
GTOE (293) 74
EQUAL (294) 75
UNEQUAL (295) 76
AND (296) 71
OR (297) 72
PLUS_ASSIGN (298) 45
MINUS_ASSIGN (299) 46
MULT_ASSIGN (300) 47
DIV_ASSIGN (301) 48
ARROW (302) 79
UNARY (303)


Nonterminals, with rules where they appear

$accept (65)
    on left: 0
jaxmin (66)
    on left: 1 2, on right: 0
definitions (67)
    on left: 3, on right: 1
block (68)
    on left: 4 5, on right: 1 2 12 49 50 51 54 55 56 57 58 59 79 80
ins_list (69)
    on left: 6 7, on right: 4 7
instruction (70)
    on left: 8 9 10 11 12 13 14 15, on right: 6 7
malloc (71)
    on left: 16 17, on right: 15
io_inst (72)
    on left: 18 19, on right: 14
jump (73)
    on left: 20 21 22 23, on right: 13
declaration (74)
    on left: 24 25 26 27 28 29 30, on right: 8 31 32 53
dcl_list (75)
    on left: 31 32, on right: 29 32
s_c (76)
    on left: 33 34, on right: 29 30
point_d (77)
    on left: 35 36, on right: 28 36
dimension (78)
    on left: 37 38, on right: 26 27 38
type (79)
    on left: 39 40 41 42 43, on right: 16 24 25 26 27 28 79 81
assignment (80)
    on left: 44 45 46 47 48, on right: 9
iteration (81)
    on left: 49 50 51, on right: 11
for_args (82)
    on left: 52, on right: 50 51
expr (83)
    on left: 53 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76
    77 78, on right: 23 25 27 44 45 46 47 48 49 54 55 56 57 58 59 63
    64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 91 92
selection (84)
    on left: 54 55 56 57, on right: 10
elif_stm (85)
    on left: 58 59, on right: 54 55 59
subrout_def (86)
    on left: 79 80, on right: 3 5
arg_val (87)
    on left: 81, on right: 82 84 85 87 88
arg_ref (88)
    on left: 82, on right: 89 90
args_func (89)
    on left: 83 84 85, on right: 79 85
args_proc (90)
    on left: 86 87 88 89 90, on right: 80 88 90
args_list (91)
    on left: 91 92, on right: 92 93
subrout_call (92)
    on left: 93, on right: 62
literal (93)
    on left: 94 95 96 97 98 99, on right: 60


State 0

    0 $accept: . jaxmin $end

    PROGRAM  shift, and go to state 1
    FUNC     shift, and go to state 2
    PROC     shift, and go to state 3

    jaxmin       go to state 4
    definitions  go to state 5
    subrout_def  go to state 6


State 1

    2 jaxmin: PROGRAM . block

    FUNC  shift, and go to state 2
    PROC  shift, and go to state 3
    '{'   shift, and go to state 7

    block        go to state 8
    subrout_def  go to state 9


State 2

   79 subrout_def: FUNC . ID '(' args_func ')' ARROW type block

    ID  shift, and go to state 10


State 3

   80 subrout_def: PROC . ID '(' args_proc ')' block

    ID  shift, and go to state 11


State 4

    0 $accept: jaxmin . $end

    $end  shift, and go to state 12


State 5

    1 jaxmin: definitions . PROGRAM block

    PROGRAM  shift, and go to state 13


State 6

    3 definitions: subrout_def .

    $default  reduce using rule 3 (definitions)


State 7

    4 block: '{' . ins_list '}'

    ID             shift, and go to state 14
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    IF             shift, and go to state 22
    FOR            shift, and go to state 23
    WHILE          shift, and go to state 24
    BREAK          shift, and go to state 25
    NEXT           shift, and go to state 26
    FUNC           shift, and go to state 2
    PROC           shift, and go to state 3
    RETURN         shift, and go to state 27
    BORN           shift, and go to state 28
    PUFF           shift, and go to state 29
    READ           shift, and go to state 30
    WRITE          shift, and go to state 31
    '{'            shift, and go to state 7

    block        go to state 32
    ins_list     go to state 33
    instruction  go to state 34
    malloc       go to state 35
    io_inst      go to state 36
    jump         go to state 37
    declaration  go to state 38
    s_c          go to state 39
    type         go to state 40
    assignment   go to state 41
    iteration    go to state 42
    selection    go to state 43
    subrout_def  go to state 9


State 8

    2 jaxmin: PROGRAM block .

    $default  reduce using rule 2 (jaxmin)


State 9

    5 block: subrout_def .

    $default  reduce using rule 5 (block)


State 10

   79 subrout_def: FUNC ID . '(' args_func ')' ARROW type block

    '('  shift, and go to state 44


State 11

   80 subrout_def: PROC ID . '(' args_proc ')' block

    '('  shift, and go to state 45


State 12

    0 $accept: jaxmin $end .

    $default  accept


State 13

    1 jaxmin: definitions PROGRAM . block

    FUNC  shift, and go to state 2
    PROC  shift, and go to state 3
    '{'   shift, and go to state 7

    block        go to state 46
    subrout_def  go to state 9


State 14

   44 assignment: ID . '=' expr
   45           | ID . PLUS_ASSIGN expr
   46           | ID . MINUS_ASSIGN expr
   47           | ID . MULT_ASSIGN expr
   48           | ID . DIV_ASSIGN expr

    PLUS_ASSIGN   shift, and go to state 47
    MINUS_ASSIGN  shift, and go to state 48
    MULT_ASSIGN   shift, and go to state 49
    DIV_ASSIGN    shift, and go to state 50
    '='           shift, and go to state 51


State 15

   43 type: BOOL .

    $default  reduce using rule 43 (type)


State 16

   41 type: CHAR .

    $default  reduce using rule 41 (type)


State 17

   42 type: FLOAT .

    $default  reduce using rule 42 (type)


State 18

   40 type: INT .

    $default  reduce using rule 40 (type)


State 19

   39 type: HOLLOW .

    $default  reduce using rule 39 (type)


State 20

   34 s_c: CONFEDERATION .

    $default  reduce using rule 34 (s_c)


State 21

   33 s_c: STRUCT .

    $default  reduce using rule 33 (s_c)


State 22

   54 selection: IF . expr block elif_stm ELSE block
   55          | IF . expr block elif_stm
   56          | IF . expr block ELSE block
   57          | IF . expr block

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 63
    subrout_call  go to state 64
    literal       go to state 65


State 23

   50 iteration: FOR . for_args TO for_args block
   51          | FOR . for_args TO for_args STEP NUMBER block

    $default  reduce using rule 52 (for_args)

    for_args  go to state 66


State 24

   49 iteration: WHILE . expr block

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 67
    subrout_call  go to state 64
    literal       go to state 65


State 25

   21 jump: BREAK .

    $default  reduce using rule 21 (jump)


State 26

   20 jump: NEXT .

    $default  reduce using rule 20 (jump)


State 27

   22 jump: RETURN .
   23     | RETURN . expr

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    $default  reduce using rule 22 (jump)

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 68
    subrout_call  go to state 64
    literal       go to state 65


State 28

   16 malloc: BORN . type

    BOOL    shift, and go to state 15
    CHAR    shift, and go to state 16
    FLOAT   shift, and go to state 17
    INT     shift, and go to state 18
    HOLLOW  shift, and go to state 19

    type  go to state 69


State 29

   17 malloc: PUFF . '(' ID ')'

    '('  shift, and go to state 70


State 30

   18 io_inst: READ . STRING ',' ID

    STRING  shift, and go to state 71


State 31

   19 io_inst: WRITE . STRING

    STRING  shift, and go to state 72


State 32

   12 instruction: block .

    $default  reduce using rule 12 (instruction)


State 33

    4 block: '{' ins_list . '}'
    7 ins_list: ins_list . NL instruction NL

    NL   shift, and go to state 73
    '}'  shift, and go to state 74


State 34

    6 ins_list: instruction . NL

    NL  shift, and go to state 75


State 35

   15 instruction: malloc .

    $default  reduce using rule 15 (instruction)


State 36

   14 instruction: io_inst .

    $default  reduce using rule 14 (instruction)


State 37

   13 instruction: jump .

    $default  reduce using rule 13 (instruction)


State 38

    8 instruction: declaration .

    $default  reduce using rule 8 (instruction)


State 39

   29 declaration: s_c . ID '{' dcl_list '}'
   30            | s_c . ID ID

    ID  shift, and go to state 76


State 40

   24 declaration: type . ID
   25            | type . ID '=' expr
   26            | type . ID dimension
   27            | type . ID dimension '=' expr
   28            | type . point_d ID

    ID   shift, and go to state 77
    '*'  shift, and go to state 78

    point_d  go to state 79


State 41

    9 instruction: assignment .

    $default  reduce using rule 9 (instruction)


State 42

   11 instruction: iteration .

    $default  reduce using rule 11 (instruction)


State 43

   10 instruction: selection .

    $default  reduce using rule 10 (instruction)


State 44

   79 subrout_def: FUNC ID '(' . args_func ')' ARROW type block

    BOOL    shift, and go to state 15
    CHAR    shift, and go to state 16
    FLOAT   shift, and go to state 17
    INT     shift, and go to state 18
    HOLLOW  shift, and go to state 19

    $default  reduce using rule 83 (args_func)

    type       go to state 80
    arg_val    go to state 81
    args_func  go to state 82


State 45

   80 subrout_def: PROC ID '(' . args_proc ')' block

    BOOL    shift, and go to state 15
    CHAR    shift, and go to state 16
    FLOAT   shift, and go to state 17
    INT     shift, and go to state 18
    HOLLOW  shift, and go to state 19
    REF     shift, and go to state 83

    $default  reduce using rule 86 (args_proc)

    type       go to state 80
    arg_val    go to state 84
    arg_ref    go to state 85
    args_proc  go to state 86


State 46

    1 jaxmin: definitions PROGRAM block .

    $default  reduce using rule 1 (jaxmin)


State 47

   45 assignment: ID PLUS_ASSIGN . expr

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 87
    subrout_call  go to state 64
    literal       go to state 65


State 48

   46 assignment: ID MINUS_ASSIGN . expr

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 88
    subrout_call  go to state 64
    literal       go to state 65


State 49

   47 assignment: ID MULT_ASSIGN . expr

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 89
    subrout_call  go to state 64
    literal       go to state 65


State 50

   48 assignment: ID DIV_ASSIGN . expr

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 90
    subrout_call  go to state 64
    literal       go to state 65


State 51

   44 assignment: ID '=' . expr

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 91
    subrout_call  go to state 64
    literal       go to state 65


State 52

   94 literal: NUMBER .

    $default  reduce using rule 94 (literal)


State 53

   95 literal: REAL .

    $default  reduce using rule 95 (literal)


State 54

   61 expr: ID .
   93 subrout_call: ID . '(' args_list ')'

    '('  shift, and go to state 92

    $default  reduce using rule 61 (expr)


State 55

   96 literal: CHARACTER .

    $default  reduce using rule 96 (literal)


State 56

   98 literal: JFALSE .

    $default  reduce using rule 98 (literal)


State 57

   97 literal: JTRUE .

    $default  reduce using rule 97 (literal)


State 58

   99 literal: JNULL .

    $default  reduce using rule 99 (literal)


State 59

   68 expr: '-' . expr

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 93
    subrout_call  go to state 64
    literal       go to state 65


State 60

   69 expr: '(' . expr ')'

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 94
    subrout_call  go to state 64
    literal       go to state 65


State 61

   70 expr: '~' . expr

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 95
    subrout_call  go to state 64
    literal       go to state 65


State 62

   53 expr: declaration .

    $default  reduce using rule 53 (expr)


State 63

   54 selection: IF expr . block elif_stm ELSE block
   55          | IF expr . block elif_stm
   56          | IF expr . block ELSE block
   57          | IF expr . block
   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr

    FUNC     shift, and go to state 2
    PROC     shift, and go to state 3
    LTOE     shift, and go to state 96
    GTOE     shift, and go to state 97
    EQUAL    shift, and go to state 98
    UNEQUAL  shift, and go to state 99
    AND      shift, and go to state 100
    OR       shift, and go to state 101
    '>'      shift, and go to state 102
    '<'      shift, and go to state 103
    '+'      shift, and go to state 104
    '-'      shift, and go to state 105
    '*'      shift, and go to state 106
    '/'      shift, and go to state 107
    '%'      shift, and go to state 108
    '{'      shift, and go to state 7

    block        go to state 109
    subrout_def  go to state 9


State 64

   62 expr: subrout_call .

    $default  reduce using rule 62 (expr)


State 65

   60 expr: literal .

    $default  reduce using rule 60 (expr)


State 66

   50 iteration: FOR for_args . TO for_args block
   51          | FOR for_args . TO for_args STEP NUMBER block

    TO  shift, and go to state 110


State 67

   49 iteration: WHILE expr . block
   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr

    FUNC     shift, and go to state 2
    PROC     shift, and go to state 3
    LTOE     shift, and go to state 96
    GTOE     shift, and go to state 97
    EQUAL    shift, and go to state 98
    UNEQUAL  shift, and go to state 99
    AND      shift, and go to state 100
    OR       shift, and go to state 101
    '>'      shift, and go to state 102
    '<'      shift, and go to state 103
    '+'      shift, and go to state 104
    '-'      shift, and go to state 105
    '*'      shift, and go to state 106
    '/'      shift, and go to state 107
    '%'      shift, and go to state 108
    '{'      shift, and go to state 7

    block        go to state 111
    subrout_def  go to state 9


State 68

   23 jump: RETURN expr .
   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr

    LTOE     shift, and go to state 96
    GTOE     shift, and go to state 97
    EQUAL    shift, and go to state 98
    UNEQUAL  shift, and go to state 99
    AND      shift, and go to state 100
    OR       shift, and go to state 101
    '>'      shift, and go to state 102
    '<'      shift, and go to state 103
    '+'      shift, and go to state 104
    '-'      shift, and go to state 105
    '*'      shift, and go to state 106
    '/'      shift, and go to state 107
    '%'      shift, and go to state 108

    $default  reduce using rule 23 (jump)


State 69

   16 malloc: BORN type .

    $default  reduce using rule 16 (malloc)


State 70

   17 malloc: PUFF '(' . ID ')'

    ID  shift, and go to state 112


State 71

   18 io_inst: READ STRING . ',' ID

    ','  shift, and go to state 113


State 72

   19 io_inst: WRITE STRING .

    $default  reduce using rule 19 (io_inst)


State 73

    7 ins_list: ins_list NL . instruction NL

    ID             shift, and go to state 14
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    IF             shift, and go to state 22
    FOR            shift, and go to state 23
    WHILE          shift, and go to state 24
    BREAK          shift, and go to state 25
    NEXT           shift, and go to state 26
    FUNC           shift, and go to state 2
    PROC           shift, and go to state 3
    RETURN         shift, and go to state 27
    BORN           shift, and go to state 28
    PUFF           shift, and go to state 29
    READ           shift, and go to state 30
    WRITE          shift, and go to state 31
    '{'            shift, and go to state 7

    block        go to state 32
    instruction  go to state 114
    malloc       go to state 35
    io_inst      go to state 36
    jump         go to state 37
    declaration  go to state 38
    s_c          go to state 39
    type         go to state 40
    assignment   go to state 41
    iteration    go to state 42
    selection    go to state 43
    subrout_def  go to state 9


State 74

    4 block: '{' ins_list '}' .

    $default  reduce using rule 4 (block)


State 75

    6 ins_list: instruction NL .

    $default  reduce using rule 6 (ins_list)


State 76

   29 declaration: s_c ID . '{' dcl_list '}'
   30            | s_c ID . ID

    ID   shift, and go to state 115
    '{'  shift, and go to state 116


State 77

   24 declaration: type ID .
   25            | type ID . '=' expr
   26            | type ID . dimension
   27            | type ID . dimension '=' expr

    '='  shift, and go to state 117
    '['  shift, and go to state 118

    $default  reduce using rule 24 (declaration)

    dimension  go to state 119


State 78

   35 point_d: '*' .

    $default  reduce using rule 35 (point_d)


State 79

   28 declaration: type point_d . ID
   36 point_d: point_d . '*'

    ID   shift, and go to state 120
    '*'  shift, and go to state 121


State 80

   81 arg_val: type . ID

    ID  shift, and go to state 122


State 81

   84 args_func: arg_val .

    $default  reduce using rule 84 (args_func)


State 82

   79 subrout_def: FUNC ID '(' args_func . ')' ARROW type block
   85 args_func: args_func . ',' arg_val

    ')'  shift, and go to state 123
    ','  shift, and go to state 124


State 83

   82 arg_ref: REF . arg_val

    BOOL    shift, and go to state 15
    CHAR    shift, and go to state 16
    FLOAT   shift, and go to state 17
    INT     shift, and go to state 18
    HOLLOW  shift, and go to state 19

    type     go to state 80
    arg_val  go to state 125


State 84

   87 args_proc: arg_val .

    $default  reduce using rule 87 (args_proc)


State 85

   89 args_proc: arg_ref .

    $default  reduce using rule 89 (args_proc)


State 86

   80 subrout_def: PROC ID '(' args_proc . ')' block
   88 args_proc: args_proc . ',' arg_val
   90          | args_proc . ',' arg_ref

    ')'  shift, and go to state 126
    ','  shift, and go to state 127


State 87

   45 assignment: ID PLUS_ASSIGN expr .
   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr

    LTOE     shift, and go to state 96
    GTOE     shift, and go to state 97
    EQUAL    shift, and go to state 98
    UNEQUAL  shift, and go to state 99
    AND      shift, and go to state 100
    OR       shift, and go to state 101
    '>'      shift, and go to state 102
    '<'      shift, and go to state 103
    '+'      shift, and go to state 104
    '-'      shift, and go to state 105
    '*'      shift, and go to state 106
    '/'      shift, and go to state 107
    '%'      shift, and go to state 108

    $default  reduce using rule 45 (assignment)


State 88

   46 assignment: ID MINUS_ASSIGN expr .
   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr

    LTOE     shift, and go to state 96
    GTOE     shift, and go to state 97
    EQUAL    shift, and go to state 98
    UNEQUAL  shift, and go to state 99
    AND      shift, and go to state 100
    OR       shift, and go to state 101
    '>'      shift, and go to state 102
    '<'      shift, and go to state 103
    '+'      shift, and go to state 104
    '-'      shift, and go to state 105
    '*'      shift, and go to state 106
    '/'      shift, and go to state 107
    '%'      shift, and go to state 108

    $default  reduce using rule 46 (assignment)


State 89

   47 assignment: ID MULT_ASSIGN expr .
   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr

    LTOE     shift, and go to state 96
    GTOE     shift, and go to state 97
    EQUAL    shift, and go to state 98
    UNEQUAL  shift, and go to state 99
    AND      shift, and go to state 100
    OR       shift, and go to state 101
    '>'      shift, and go to state 102
    '<'      shift, and go to state 103
    '+'      shift, and go to state 104
    '-'      shift, and go to state 105
    '*'      shift, and go to state 106
    '/'      shift, and go to state 107
    '%'      shift, and go to state 108

    $default  reduce using rule 47 (assignment)


State 90

   48 assignment: ID DIV_ASSIGN expr .
   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr

    LTOE     shift, and go to state 96
    GTOE     shift, and go to state 97
    EQUAL    shift, and go to state 98
    UNEQUAL  shift, and go to state 99
    AND      shift, and go to state 100
    OR       shift, and go to state 101
    '>'      shift, and go to state 102
    '<'      shift, and go to state 103
    '+'      shift, and go to state 104
    '-'      shift, and go to state 105
    '*'      shift, and go to state 106
    '/'      shift, and go to state 107
    '%'      shift, and go to state 108

    $default  reduce using rule 48 (assignment)


State 91

   44 assignment: ID '=' expr .
   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr

    LTOE     shift, and go to state 96
    GTOE     shift, and go to state 97
    EQUAL    shift, and go to state 98
    UNEQUAL  shift, and go to state 99
    AND      shift, and go to state 100
    OR       shift, and go to state 101
    '>'      shift, and go to state 102
    '<'      shift, and go to state 103
    '+'      shift, and go to state 104
    '-'      shift, and go to state 105
    '*'      shift, and go to state 106
    '/'      shift, and go to state 107
    '%'      shift, and go to state 108

    $default  reduce using rule 44 (assignment)


State 92

   93 subrout_call: ID '(' . args_list ')'

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 128
    args_list     go to state 129
    subrout_call  go to state 64
    literal       go to state 65


State 93

   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   68     | '-' expr .
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr

    $default  reduce using rule 68 (expr)


State 94

   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   69     | '(' expr . ')'
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr

    LTOE     shift, and go to state 96
    GTOE     shift, and go to state 97
    EQUAL    shift, and go to state 98
    UNEQUAL  shift, and go to state 99
    AND      shift, and go to state 100
    OR       shift, and go to state 101
    '>'      shift, and go to state 102
    '<'      shift, and go to state 103
    '+'      shift, and go to state 104
    '-'      shift, and go to state 105
    '*'      shift, and go to state 106
    '/'      shift, and go to state 107
    '%'      shift, and go to state 108
    ')'      shift, and go to state 130


State 95

   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   70     | '~' expr .
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr

    $default  reduce using rule 70 (expr)


State 96

   73 expr: expr LTOE . expr

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 131
    subrout_call  go to state 64
    literal       go to state 65


State 97

   74 expr: expr GTOE . expr

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 132
    subrout_call  go to state 64
    literal       go to state 65


State 98

   75 expr: expr EQUAL . expr

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 133
    subrout_call  go to state 64
    literal       go to state 65


State 99

   76 expr: expr UNEQUAL . expr

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 134
    subrout_call  go to state 64
    literal       go to state 65


State 100

   71 expr: expr AND . expr

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 135
    subrout_call  go to state 64
    literal       go to state 65


State 101

   72 expr: expr OR . expr

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 136
    subrout_call  go to state 64
    literal       go to state 65


State 102

   78 expr: expr '>' . expr

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 137
    subrout_call  go to state 64
    literal       go to state 65


State 103

   77 expr: expr '<' . expr

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 138
    subrout_call  go to state 64
    literal       go to state 65


State 104

   63 expr: expr '+' . expr

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 139
    subrout_call  go to state 64
    literal       go to state 65


State 105

   64 expr: expr '-' . expr

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 140
    subrout_call  go to state 64
    literal       go to state 65


State 106

   65 expr: expr '*' . expr

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 141
    subrout_call  go to state 64
    literal       go to state 65


State 107

   66 expr: expr '/' . expr

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 142
    subrout_call  go to state 64
    literal       go to state 65


State 108

   67 expr: expr '%' . expr

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 143
    subrout_call  go to state 64
    literal       go to state 65


State 109

   54 selection: IF expr block . elif_stm ELSE block
   55          | IF expr block . elif_stm
   56          | IF expr block . ELSE block
   57          | IF expr block .

    ELIF  shift, and go to state 144
    ELSE  shift, and go to state 145

    $default  reduce using rule 57 (selection)

    elif_stm  go to state 146


State 110

   50 iteration: FOR for_args TO . for_args block
   51          | FOR for_args TO . for_args STEP NUMBER block

    $default  reduce using rule 52 (for_args)

    for_args  go to state 147


State 111

   49 iteration: WHILE expr block .

    $default  reduce using rule 49 (iteration)


State 112

   17 malloc: PUFF '(' ID . ')'

    ')'  shift, and go to state 148


State 113

   18 io_inst: READ STRING ',' . ID

    ID  shift, and go to state 149


State 114

    7 ins_list: ins_list NL instruction . NL

    NL  shift, and go to state 150


State 115

   30 declaration: s_c ID ID .

    $default  reduce using rule 30 (declaration)


State 116

   29 declaration: s_c ID '{' . dcl_list '}'

    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21

    declaration  go to state 151
    dcl_list     go to state 152
    s_c          go to state 39
    type         go to state 40


State 117

   25 declaration: type ID '=' . expr

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 153
    subrout_call  go to state 64
    literal       go to state 65


State 118

   37 dimension: '[' . NUMBER ']'

    NUMBER  shift, and go to state 154


State 119

   26 declaration: type ID dimension .
   27            | type ID dimension . '=' expr
   38 dimension: dimension . '[' NUMBER ']'

    '='  shift, and go to state 155
    '['  shift, and go to state 156

    $default  reduce using rule 26 (declaration)


State 120

   28 declaration: type point_d ID .

    $default  reduce using rule 28 (declaration)


State 121

   36 point_d: point_d '*' .

    $default  reduce using rule 36 (point_d)


State 122

   81 arg_val: type ID .

    $default  reduce using rule 81 (arg_val)


State 123

   79 subrout_def: FUNC ID '(' args_func ')' . ARROW type block

    ARROW  shift, and go to state 157


State 124

   85 args_func: args_func ',' . arg_val

    BOOL    shift, and go to state 15
    CHAR    shift, and go to state 16
    FLOAT   shift, and go to state 17
    INT     shift, and go to state 18
    HOLLOW  shift, and go to state 19

    type     go to state 80
    arg_val  go to state 158


State 125

   82 arg_ref: REF arg_val .

    $default  reduce using rule 82 (arg_ref)


State 126

   80 subrout_def: PROC ID '(' args_proc ')' . block

    FUNC  shift, and go to state 2
    PROC  shift, and go to state 3
    '{'   shift, and go to state 7

    block        go to state 159
    subrout_def  go to state 9


State 127

   88 args_proc: args_proc ',' . arg_val
   90          | args_proc ',' . arg_ref

    BOOL    shift, and go to state 15
    CHAR    shift, and go to state 16
    FLOAT   shift, and go to state 17
    INT     shift, and go to state 18
    HOLLOW  shift, and go to state 19
    REF     shift, and go to state 83

    type     go to state 80
    arg_val  go to state 160
    arg_ref  go to state 161


State 128

   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr
   91 args_list: expr .

    LTOE     shift, and go to state 96
    GTOE     shift, and go to state 97
    EQUAL    shift, and go to state 98
    UNEQUAL  shift, and go to state 99
    AND      shift, and go to state 100
    OR       shift, and go to state 101
    '>'      shift, and go to state 102
    '<'      shift, and go to state 103
    '+'      shift, and go to state 104
    '-'      shift, and go to state 105
    '*'      shift, and go to state 106
    '/'      shift, and go to state 107
    '%'      shift, and go to state 108

    $default  reduce using rule 91 (args_list)


State 129

   92 args_list: args_list . ',' expr
   93 subrout_call: ID '(' args_list . ')'

    ')'  shift, and go to state 162
    ','  shift, and go to state 163


State 130

   69 expr: '(' expr ')' .

    $default  reduce using rule 69 (expr)


State 131

   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   73     | expr LTOE expr .
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr

    '+'  shift, and go to state 104
    '-'  shift, and go to state 105
    '*'  shift, and go to state 106
    '/'  shift, and go to state 107
    '%'  shift, and go to state 108

    LTOE  error (nonassociative)
    GTOE  error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 73 (expr)


State 132

   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   74     | expr GTOE expr .
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr

    '+'  shift, and go to state 104
    '-'  shift, and go to state 105
    '*'  shift, and go to state 106
    '/'  shift, and go to state 107
    '%'  shift, and go to state 108

    LTOE  error (nonassociative)
    GTOE  error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 74 (expr)


State 133

   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   75     | expr EQUAL expr .
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr

    LTOE  shift, and go to state 96
    GTOE  shift, and go to state 97
    '>'   shift, and go to state 102
    '<'   shift, and go to state 103
    '+'   shift, and go to state 104
    '-'   shift, and go to state 105
    '*'   shift, and go to state 106
    '/'   shift, and go to state 107
    '%'   shift, and go to state 108

    $default  reduce using rule 75 (expr)


State 134

   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   76     | expr UNEQUAL expr .
   77     | expr . '<' expr
   78     | expr . '>' expr

    LTOE  shift, and go to state 96
    GTOE  shift, and go to state 97
    '>'   shift, and go to state 102
    '<'   shift, and go to state 103
    '+'   shift, and go to state 104
    '-'   shift, and go to state 105
    '*'   shift, and go to state 106
    '/'   shift, and go to state 107
    '%'   shift, and go to state 108

    $default  reduce using rule 76 (expr)


State 135

   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   71     | expr . AND expr
   71     | expr AND expr .
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr

    LTOE     shift, and go to state 96
    GTOE     shift, and go to state 97
    EQUAL    shift, and go to state 98
    UNEQUAL  shift, and go to state 99
    '>'      shift, and go to state 102
    '<'      shift, and go to state 103
    '+'      shift, and go to state 104
    '-'      shift, and go to state 105
    '*'      shift, and go to state 106
    '/'      shift, and go to state 107
    '%'      shift, and go to state 108

    $default  reduce using rule 71 (expr)


State 136

   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   71     | expr . AND expr
   72     | expr . OR expr
   72     | expr OR expr .
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr

    LTOE     shift, and go to state 96
    GTOE     shift, and go to state 97
    EQUAL    shift, and go to state 98
    UNEQUAL  shift, and go to state 99
    AND      shift, and go to state 100
    '>'      shift, and go to state 102
    '<'      shift, and go to state 103
    '+'      shift, and go to state 104
    '-'      shift, and go to state 105
    '*'      shift, and go to state 106
    '/'      shift, and go to state 107
    '%'      shift, and go to state 108

    $default  reduce using rule 72 (expr)


State 137

   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr
   78     | expr '>' expr .

    '+'  shift, and go to state 104
    '-'  shift, and go to state 105
    '*'  shift, and go to state 106
    '/'  shift, and go to state 107
    '%'  shift, and go to state 108

    LTOE  error (nonassociative)
    GTOE  error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 78 (expr)


State 138

   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   77     | expr '<' expr .
   78     | expr . '>' expr

    '+'  shift, and go to state 104
    '-'  shift, and go to state 105
    '*'  shift, and go to state 106
    '/'  shift, and go to state 107
    '%'  shift, and go to state 108

    LTOE  error (nonassociative)
    GTOE  error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 77 (expr)


State 139

   63 expr: expr . '+' expr
   63     | expr '+' expr .
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr

    '*'  shift, and go to state 106
    '/'  shift, and go to state 107
    '%'  shift, and go to state 108

    $default  reduce using rule 63 (expr)


State 140

   63 expr: expr . '+' expr
   64     | expr . '-' expr
   64     | expr '-' expr .
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr

    '*'  shift, and go to state 106
    '/'  shift, and go to state 107
    '%'  shift, and go to state 108

    $default  reduce using rule 64 (expr)


State 141

   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   65     | expr '*' expr .
   66     | expr . '/' expr
   67     | expr . '%' expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr

    $default  reduce using rule 65 (expr)


State 142

   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   66     | expr '/' expr .
   67     | expr . '%' expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr

    $default  reduce using rule 66 (expr)


State 143

   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   67     | expr '%' expr .
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr

    $default  reduce using rule 67 (expr)


State 144

   58 elif_stm: ELIF . expr block

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 164
    subrout_call  go to state 64
    literal       go to state 65


State 145

   56 selection: IF expr block ELSE . block

    FUNC  shift, and go to state 2
    PROC  shift, and go to state 3
    '{'   shift, and go to state 7

    block        go to state 165
    subrout_def  go to state 9


State 146

   54 selection: IF expr block elif_stm . ELSE block
   55          | IF expr block elif_stm .
   59 elif_stm: elif_stm . ELIF expr block

    ELIF  shift, and go to state 166
    ELSE  shift, and go to state 167

    $default  reduce using rule 55 (selection)


State 147

   50 iteration: FOR for_args TO for_args . block
   51          | FOR for_args TO for_args . STEP NUMBER block

    STEP  shift, and go to state 168
    FUNC  shift, and go to state 2
    PROC  shift, and go to state 3
    '{'   shift, and go to state 7

    block        go to state 169
    subrout_def  go to state 9


State 148

   17 malloc: PUFF '(' ID ')' .

    $default  reduce using rule 17 (malloc)


State 149

   18 io_inst: READ STRING ',' ID .

    $default  reduce using rule 18 (io_inst)


State 150

    7 ins_list: ins_list NL instruction NL .

    $default  reduce using rule 7 (ins_list)


State 151

   31 dcl_list: declaration .

    $default  reduce using rule 31 (dcl_list)


State 152

   29 declaration: s_c ID '{' dcl_list . '}'
   32 dcl_list: dcl_list . declaration

    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    '}'            shift, and go to state 170

    declaration  go to state 171
    s_c          go to state 39
    type         go to state 40


State 153

   25 declaration: type ID '=' expr .
   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr

    LTOE     shift, and go to state 96
    GTOE     shift, and go to state 97
    EQUAL    shift, and go to state 98
    UNEQUAL  shift, and go to state 99
    AND      shift, and go to state 100
    OR       shift, and go to state 101
    '>'      shift, and go to state 102
    '<'      shift, and go to state 103
    '+'      shift, and go to state 104
    '-'      shift, and go to state 105
    '*'      shift, and go to state 106
    '/'      shift, and go to state 107
    '%'      shift, and go to state 108

    $default  reduce using rule 25 (declaration)


State 154

   37 dimension: '[' NUMBER . ']'

    ']'  shift, and go to state 172


State 155

   27 declaration: type ID dimension '=' . expr

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 173
    subrout_call  go to state 64
    literal       go to state 65


State 156

   38 dimension: dimension '[' . NUMBER ']'

    NUMBER  shift, and go to state 174


State 157

   79 subrout_def: FUNC ID '(' args_func ')' ARROW . type block

    BOOL    shift, and go to state 15
    CHAR    shift, and go to state 16
    FLOAT   shift, and go to state 17
    INT     shift, and go to state 18
    HOLLOW  shift, and go to state 19

    type  go to state 175


State 158

   85 args_func: args_func ',' arg_val .

    $default  reduce using rule 85 (args_func)


State 159

   80 subrout_def: PROC ID '(' args_proc ')' block .

    $default  reduce using rule 80 (subrout_def)


State 160

   88 args_proc: args_proc ',' arg_val .

    $default  reduce using rule 88 (args_proc)


State 161

   90 args_proc: args_proc ',' arg_ref .

    $default  reduce using rule 90 (args_proc)


State 162

   93 subrout_call: ID '(' args_list ')' .

    $default  reduce using rule 93 (subrout_call)


State 163

   92 args_list: args_list ',' . expr

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 176
    subrout_call  go to state 64
    literal       go to state 65


State 164

   58 elif_stm: ELIF expr . block
   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr

    FUNC     shift, and go to state 2
    PROC     shift, and go to state 3
    LTOE     shift, and go to state 96
    GTOE     shift, and go to state 97
    EQUAL    shift, and go to state 98
    UNEQUAL  shift, and go to state 99
    AND      shift, and go to state 100
    OR       shift, and go to state 101
    '>'      shift, and go to state 102
    '<'      shift, and go to state 103
    '+'      shift, and go to state 104
    '-'      shift, and go to state 105
    '*'      shift, and go to state 106
    '/'      shift, and go to state 107
    '%'      shift, and go to state 108
    '{'      shift, and go to state 7

    block        go to state 177
    subrout_def  go to state 9


State 165

   56 selection: IF expr block ELSE block .

    $default  reduce using rule 56 (selection)


State 166

   59 elif_stm: elif_stm ELIF . expr block

    NUMBER         shift, and go to state 52
    REAL           shift, and go to state 53
    ID             shift, and go to state 54
    CHARACTER      shift, and go to state 55
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 18
    HOLLOW         shift, and go to state 19
    CONFEDERATION  shift, and go to state 20
    STRUCT         shift, and go to state 21
    JFALSE         shift, and go to state 56
    JTRUE          shift, and go to state 57
    JNULL          shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    '~'            shift, and go to state 61

    declaration   go to state 62
    s_c           go to state 39
    type          go to state 40
    expr          go to state 178
    subrout_call  go to state 64
    literal       go to state 65


State 167

   54 selection: IF expr block elif_stm ELSE . block

    FUNC  shift, and go to state 2
    PROC  shift, and go to state 3
    '{'   shift, and go to state 7

    block        go to state 179
    subrout_def  go to state 9


State 168

   51 iteration: FOR for_args TO for_args STEP . NUMBER block

    NUMBER  shift, and go to state 180


State 169

   50 iteration: FOR for_args TO for_args block .

    $default  reduce using rule 50 (iteration)


State 170

   29 declaration: s_c ID '{' dcl_list '}' .

    $default  reduce using rule 29 (declaration)


State 171

   32 dcl_list: dcl_list declaration .

    $default  reduce using rule 32 (dcl_list)


State 172

   37 dimension: '[' NUMBER ']' .

    $default  reduce using rule 37 (dimension)


State 173

   27 declaration: type ID dimension '=' expr .
   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr

    LTOE     shift, and go to state 96
    GTOE     shift, and go to state 97
    EQUAL    shift, and go to state 98
    UNEQUAL  shift, and go to state 99
    AND      shift, and go to state 100
    OR       shift, and go to state 101
    '>'      shift, and go to state 102
    '<'      shift, and go to state 103
    '+'      shift, and go to state 104
    '-'      shift, and go to state 105
    '*'      shift, and go to state 106
    '/'      shift, and go to state 107
    '%'      shift, and go to state 108

    $default  reduce using rule 27 (declaration)


State 174

   38 dimension: dimension '[' NUMBER . ']'

    ']'  shift, and go to state 181


State 175

   79 subrout_def: FUNC ID '(' args_func ')' ARROW type . block

    FUNC  shift, and go to state 2
    PROC  shift, and go to state 3
    '{'   shift, and go to state 7

    block        go to state 182
    subrout_def  go to state 9


State 176

   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr
   92 args_list: args_list ',' expr .

    LTOE     shift, and go to state 96
    GTOE     shift, and go to state 97
    EQUAL    shift, and go to state 98
    UNEQUAL  shift, and go to state 99
    AND      shift, and go to state 100
    OR       shift, and go to state 101
    '>'      shift, and go to state 102
    '<'      shift, and go to state 103
    '+'      shift, and go to state 104
    '-'      shift, and go to state 105
    '*'      shift, and go to state 106
    '/'      shift, and go to state 107
    '%'      shift, and go to state 108

    $default  reduce using rule 92 (args_list)


State 177

   58 elif_stm: ELIF expr block .

    $default  reduce using rule 58 (elif_stm)


State 178

   59 elif_stm: elif_stm ELIF expr . block
   63 expr: expr . '+' expr
   64     | expr . '-' expr
   65     | expr . '*' expr
   66     | expr . '/' expr
   67     | expr . '%' expr
   71     | expr . AND expr
   72     | expr . OR expr
   73     | expr . LTOE expr
   74     | expr . GTOE expr
   75     | expr . EQUAL expr
   76     | expr . UNEQUAL expr
   77     | expr . '<' expr
   78     | expr . '>' expr

    FUNC     shift, and go to state 2
    PROC     shift, and go to state 3
    LTOE     shift, and go to state 96
    GTOE     shift, and go to state 97
    EQUAL    shift, and go to state 98
    UNEQUAL  shift, and go to state 99
    AND      shift, and go to state 100
    OR       shift, and go to state 101
    '>'      shift, and go to state 102
    '<'      shift, and go to state 103
    '+'      shift, and go to state 104
    '-'      shift, and go to state 105
    '*'      shift, and go to state 106
    '/'      shift, and go to state 107
    '%'      shift, and go to state 108
    '{'      shift, and go to state 7

    block        go to state 183
    subrout_def  go to state 9


State 179

   54 selection: IF expr block elif_stm ELSE block .

    $default  reduce using rule 54 (selection)


State 180

   51 iteration: FOR for_args TO for_args STEP NUMBER . block

    FUNC  shift, and go to state 2
    PROC  shift, and go to state 3
    '{'   shift, and go to state 7

    block        go to state 184
    subrout_def  go to state 9


State 181

   38 dimension: dimension '[' NUMBER ']' .

    $default  reduce using rule 38 (dimension)


State 182

   79 subrout_def: FUNC ID '(' args_func ')' ARROW type block .

    $default  reduce using rule 79 (subrout_def)


State 183

   59 elif_stm: elif_stm ELIF expr block .

    $default  reduce using rule 59 (elif_stm)


State 184

   51 iteration: FOR for_args TO for_args STEP NUMBER block .

    $default  reduce using rule 51 (iteration)
