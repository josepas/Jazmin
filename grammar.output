Grammar

    0 $accept: jaxmin $end

    1 jaxmin: definitions PROGRAM block
    2       | PROGRAM block

    3 e: %empty
    4  | NL

    5 definitions: outer_def
    6            | definitions NL outer_def

    7 outer_def: declaration
    8          | subrout_def
    9          | malloc NL

   10 block: e '{' NL ins_list '}'

   11 ins_list: instruction
   12         | ins_list instruction

   13 instruction: declaration
   14            | block
   15            | selection
   16            | iteration
   17            | assignment NL
   18            | jump NL
   19            | io_inst NL
   20            | malloc NL

   21 malloc: BORN '(' ID ',' type ')'
   22       | PUFF '(' ID ')'

   23 io_inst: READ STRING ',' ID
   24        | WRITE STRING

   25 jump: NEXT
   26     | BREAK
   27     | RETURN
   28     | RETURN expr

   29 declaration: type ID NL
   30            | type ID '=' expr NL
   31            | type ID dimension NL
   32            | type ID dimension '=' expr NL
   33            | type point_d ID NL
   34            | s_c ID '{' dcl_list '}'
   35            | s_c ID ID NL

   36 dcl_list: declaration
   37         | dcl_list declaration

   38 s_c: STRUCT
   39    | CONFEDERATION

   40 point_d: '*'
   41        | point_d '*'

   42 dimension: '[' NUMBER ']'
   43          | dimension '[' NUMBER ']'

   44 type: HOLLOW
   45     | INT
   46     | CHAR
   47     | FLOAT
   48     | BOOL

   49 assignment: ID '=' expr
   50           | ID PLUS_ASSIGN expr
   51           | ID MINUS_ASSIGN expr
   52           | ID MULT_ASSIGN expr
   53           | ID DIV_ASSIGN expr

   54 iteration: WHILE expr block
   55          | FOR for_args TO for_args block
   56          | FOR for_args TO for_args STEP NUMBER block

   57 for_args: %empty

   58 expr: declaration

   59 selection: IF expr block elif_stm ELSE block
   60          | IF expr block elif_stm
   61          | IF expr block ELSE block
   62          | IF expr block

   63 elif_stm: ELIF expr block
   64         | elif_stm ELIF expr block

   65 expr: literal
   66     | ID
   67     | subrout_call
   68     | expr '+' expr
   69     | expr '-' expr
   70     | expr '*' expr
   71     | expr '/' expr
   72     | expr '%' expr
   73     | '-' expr
   74     | '(' expr ')'
   75     | '~' expr
   76     | expr AND expr
   77     | expr OR expr
   78     | expr LTOE expr
   79     | expr GTOE expr
   80     | expr EQUAL expr
   81     | expr UNEQUAL expr
   82     | expr '<' expr
   83     | expr '>' expr

   84 subrout_def: FUNC ID '(' args_func ')' ARROW type block
   85            | PROC ID '(' args_proc ')' block

   86 arg_val: type ID

   87 arg_ref: REF arg_val

   88 args_func: %empty
   89          | arg_val
   90          | args_func ',' arg_val

   91 args_proc: %empty
   92          | arg_val
   93          | args_proc ',' arg_val
   94          | arg_ref
   95          | args_proc ',' arg_ref

   96 args_list: expr
   97          | args_list ',' expr

   98 subrout_call: ID '(' args_list ')'

   99 literal: NUMBER
  100        | REAL
  101        | CHARACTER
  102        | JTRUE
  103        | JFALSE
  104        | JNULL


Terminals, with rules where they appear

$end (0) 0
'%' (37) 72
'(' (40) 21 22 74 84 85 98
')' (41) 21 22 74 84 85 98
'*' (42) 40 41 70
'+' (43) 68
',' (44) 21 23 90 93 95 97
'-' (45) 69 73
'/' (47) 71
'<' (60) 82
'=' (61) 30 32 49
'>' (62) 83
'[' (91) 42 43
']' (93) 42 43
'{' (123) 10 34
'}' (125) 10 34
'~' (126) 75
error (256)
NUMBER (258) 42 43 56 99
REAL (259) 100
ID (260) 21 22 23 29 30 31 32 33 34 35 49 50 51 52 53 66 84 85 86 98
STRING (261) 23 24
CHARACTER (262) 101
PROGRAM (263) 1 2
NL (264) 4 6 9 10 17 18 19 20 29 30 31 32 33 35
BOOL (265) 48
CHAR (266) 46
FLOAT (267) 47
INT (268) 45
HOLLOW (269) 44
CONFEDERATION (270) 39
STRUCT (271) 38
IF (272) 59 60 61 62
ELIF (273) 63 64
ELSE (274) 59 61
JFALSE (275) 103
JTRUE (276) 102
JNULL (277) 104
FOR (278) 55 56
WHILE (279) 54
TO (280) 55 56
STEP (281) 56
BREAK (282) 26
NEXT (283) 25
FUNC (284) 84
PROC (285) 85
REF (286) 87
RETURN (287) 27 28
BORN (288) 21
PUFF (289) 22
READ (290) 23
WRITE (291) 24
LTOE (292) 78
GTOE (293) 79
EQUAL (294) 80
UNEQUAL (295) 81
AND (296) 76
OR (297) 77
PLUS_ASSIGN (298) 50
MINUS_ASSIGN (299) 51
MULT_ASSIGN (300) 52
DIV_ASSIGN (301) 53
ARROW (302) 84
UNARY (303)


Nonterminals, with rules where they appear

$accept (65)
    on left: 0
jaxmin (66)
    on left: 1 2, on right: 0
e (67)
    on left: 3 4, on right: 10
definitions (68)
    on left: 5 6, on right: 1 6
outer_def (69)
    on left: 7 8 9, on right: 5 6
block (70)
    on left: 10, on right: 1 2 14 54 55 56 59 60 61 62 63 64 84 85
ins_list (71)
    on left: 11 12, on right: 10 12
instruction (72)
    on left: 13 14 15 16 17 18 19 20, on right: 11 12
malloc (73)
    on left: 21 22, on right: 9 20
io_inst (74)
    on left: 23 24, on right: 19
jump (75)
    on left: 25 26 27 28, on right: 18
declaration (76)
    on left: 29 30 31 32 33 34 35, on right: 7 13 36 37 58
dcl_list (77)
    on left: 36 37, on right: 34 37
s_c (78)
    on left: 38 39, on right: 34 35
point_d (79)
    on left: 40 41, on right: 33 41
dimension (80)
    on left: 42 43, on right: 31 32 43
type (81)
    on left: 44 45 46 47 48, on right: 21 29 30 31 32 33 84 86
assignment (82)
    on left: 49 50 51 52 53, on right: 17
iteration (83)
    on left: 54 55 56, on right: 16
for_args (84)
    on left: 57, on right: 55 56
expr (85)
    on left: 58 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
    82 83, on right: 28 30 32 49 50 51 52 53 54 59 60 61 62 63 64 68
    69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 96 97
selection (86)
    on left: 59 60 61 62, on right: 15
elif_stm (87)
    on left: 63 64, on right: 59 60 64
subrout_def (88)
    on left: 84 85, on right: 8
arg_val (89)
    on left: 86, on right: 87 89 90 92 93
arg_ref (90)
    on left: 87, on right: 94 95
args_func (91)
    on left: 88 89 90, on right: 84 90
args_proc (92)
    on left: 91 92 93 94 95, on right: 85 93 95
args_list (93)
    on left: 96 97, on right: 97 98
subrout_call (94)
    on left: 98, on right: 67
literal (95)
    on left: 99 100 101 102 103 104, on right: 65


State 0

    0 $accept: . jaxmin $end

    PROGRAM        shift, and go to state 1
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    FUNC           shift, and go to state 9
    PROC           shift, and go to state 10
    BORN           shift, and go to state 11
    PUFF           shift, and go to state 12

    jaxmin       go to state 13
    definitions  go to state 14
    outer_def    go to state 15
    malloc       go to state 16
    declaration  go to state 17
    s_c          go to state 18
    type         go to state 19
    subrout_def  go to state 20


State 1

    2 jaxmin: PROGRAM . block

    NL  shift, and go to state 21

    $default  reduce using rule 3 (e)

    e      go to state 22
    block  go to state 23


State 2

   48 type: BOOL .

    $default  reduce using rule 48 (type)


State 3

   46 type: CHAR .

    $default  reduce using rule 46 (type)


State 4

   47 type: FLOAT .

    $default  reduce using rule 47 (type)


State 5

   45 type: INT .

    $default  reduce using rule 45 (type)


State 6

   44 type: HOLLOW .

    $default  reduce using rule 44 (type)


State 7

   39 s_c: CONFEDERATION .

    $default  reduce using rule 39 (s_c)


State 8

   38 s_c: STRUCT .

    $default  reduce using rule 38 (s_c)


State 9

   84 subrout_def: FUNC . ID '(' args_func ')' ARROW type block

    ID  shift, and go to state 24


State 10

   85 subrout_def: PROC . ID '(' args_proc ')' block

    ID  shift, and go to state 25


State 11

   21 malloc: BORN . '(' ID ',' type ')'

    '('  shift, and go to state 26


State 12

   22 malloc: PUFF . '(' ID ')'

    '('  shift, and go to state 27


State 13

    0 $accept: jaxmin . $end

    $end  shift, and go to state 28


State 14

    1 jaxmin: definitions . PROGRAM block
    6 definitions: definitions . NL outer_def

    PROGRAM  shift, and go to state 29
    NL       shift, and go to state 30


State 15

    5 definitions: outer_def .

    $default  reduce using rule 5 (definitions)


State 16

    9 outer_def: malloc . NL

    NL  shift, and go to state 31


State 17

    7 outer_def: declaration .

    $default  reduce using rule 7 (outer_def)


State 18

   34 declaration: s_c . ID '{' dcl_list '}'
   35            | s_c . ID ID NL

    ID  shift, and go to state 32


State 19

   29 declaration: type . ID NL
   30            | type . ID '=' expr NL
   31            | type . ID dimension NL
   32            | type . ID dimension '=' expr NL
   33            | type . point_d ID NL

    ID   shift, and go to state 33
    '*'  shift, and go to state 34

    point_d  go to state 35


State 20

    8 outer_def: subrout_def .

    $default  reduce using rule 8 (outer_def)


State 21

    4 e: NL .

    $default  reduce using rule 4 (e)


State 22

   10 block: e . '{' NL ins_list '}'

    '{'  shift, and go to state 36


State 23

    2 jaxmin: PROGRAM block .

    $default  reduce using rule 2 (jaxmin)


State 24

   84 subrout_def: FUNC ID . '(' args_func ')' ARROW type block

    '('  shift, and go to state 37


State 25

   85 subrout_def: PROC ID . '(' args_proc ')' block

    '('  shift, and go to state 38


State 26

   21 malloc: BORN '(' . ID ',' type ')'

    ID  shift, and go to state 39


State 27

   22 malloc: PUFF '(' . ID ')'

    ID  shift, and go to state 40


State 28

    0 $accept: jaxmin $end .

    $default  accept


State 29

    1 jaxmin: definitions PROGRAM . block

    NL  shift, and go to state 21

    $default  reduce using rule 3 (e)

    e      go to state 22
    block  go to state 41


State 30

    6 definitions: definitions NL . outer_def

    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    FUNC           shift, and go to state 9
    PROC           shift, and go to state 10
    BORN           shift, and go to state 11
    PUFF           shift, and go to state 12

    outer_def    go to state 42
    malloc       go to state 16
    declaration  go to state 17
    s_c          go to state 18
    type         go to state 19
    subrout_def  go to state 20


State 31

    9 outer_def: malloc NL .

    $default  reduce using rule 9 (outer_def)


State 32

   34 declaration: s_c ID . '{' dcl_list '}'
   35            | s_c ID . ID NL

    ID   shift, and go to state 43
    '{'  shift, and go to state 44


State 33

   29 declaration: type ID . NL
   30            | type ID . '=' expr NL
   31            | type ID . dimension NL
   32            | type ID . dimension '=' expr NL

    NL   shift, and go to state 45
    '='  shift, and go to state 46
    '['  shift, and go to state 47

    dimension  go to state 48


State 34

   40 point_d: '*' .

    $default  reduce using rule 40 (point_d)


State 35

   33 declaration: type point_d . ID NL
   41 point_d: point_d . '*'

    ID   shift, and go to state 49
    '*'  shift, and go to state 50


State 36

   10 block: e '{' . NL ins_list '}'

    NL  shift, and go to state 51


State 37

   84 subrout_def: FUNC ID '(' . args_func ')' ARROW type block

    BOOL    shift, and go to state 2
    CHAR    shift, and go to state 3
    FLOAT   shift, and go to state 4
    INT     shift, and go to state 5
    HOLLOW  shift, and go to state 6

    $default  reduce using rule 88 (args_func)

    type       go to state 52
    arg_val    go to state 53
    args_func  go to state 54


State 38

   85 subrout_def: PROC ID '(' . args_proc ')' block

    BOOL    shift, and go to state 2
    CHAR    shift, and go to state 3
    FLOAT   shift, and go to state 4
    INT     shift, and go to state 5
    HOLLOW  shift, and go to state 6
    REF     shift, and go to state 55

    $default  reduce using rule 91 (args_proc)

    type       go to state 52
    arg_val    go to state 56
    arg_ref    go to state 57
    args_proc  go to state 58


State 39

   21 malloc: BORN '(' ID . ',' type ')'

    ','  shift, and go to state 59


State 40

   22 malloc: PUFF '(' ID . ')'

    ')'  shift, and go to state 60


State 41

    1 jaxmin: definitions PROGRAM block .

    $default  reduce using rule 1 (jaxmin)


State 42

    6 definitions: definitions NL outer_def .

    $default  reduce using rule 6 (definitions)


State 43

   35 declaration: s_c ID ID . NL

    NL  shift, and go to state 61


State 44

   34 declaration: s_c ID '{' . dcl_list '}'

    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8

    declaration  go to state 62
    dcl_list     go to state 63
    s_c          go to state 18
    type         go to state 19


State 45

   29 declaration: type ID NL .

    $default  reduce using rule 29 (declaration)


State 46

   30 declaration: type ID '=' . expr NL

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 75
    subrout_call  go to state 76
    literal       go to state 77


State 47

   42 dimension: '[' . NUMBER ']'

    NUMBER  shift, and go to state 78


State 48

   31 declaration: type ID dimension . NL
   32            | type ID dimension . '=' expr NL
   43 dimension: dimension . '[' NUMBER ']'

    NL   shift, and go to state 79
    '='  shift, and go to state 80
    '['  shift, and go to state 81


State 49

   33 declaration: type point_d ID . NL

    NL  shift, and go to state 82


State 50

   41 point_d: point_d '*' .

    $default  reduce using rule 41 (point_d)


State 51

   10 block: e '{' NL . ins_list '}'

    ID             shift, and go to state 83
    NL             shift, and go to state 21
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    IF             shift, and go to state 84
    FOR            shift, and go to state 85
    WHILE          shift, and go to state 86
    BREAK          shift, and go to state 87
    NEXT           shift, and go to state 88
    RETURN         shift, and go to state 89
    BORN           shift, and go to state 11
    PUFF           shift, and go to state 12
    READ           shift, and go to state 90
    WRITE          shift, and go to state 91

    $default  reduce using rule 3 (e)

    e            go to state 22
    block        go to state 92
    ins_list     go to state 93
    instruction  go to state 94
    malloc       go to state 95
    io_inst      go to state 96
    jump         go to state 97
    declaration  go to state 98
    s_c          go to state 18
    type         go to state 19
    assignment   go to state 99
    iteration    go to state 100
    selection    go to state 101


State 52

   86 arg_val: type . ID

    ID  shift, and go to state 102


State 53

   89 args_func: arg_val .

    $default  reduce using rule 89 (args_func)


State 54

   84 subrout_def: FUNC ID '(' args_func . ')' ARROW type block
   90 args_func: args_func . ',' arg_val

    ','  shift, and go to state 103
    ')'  shift, and go to state 104


State 55

   87 arg_ref: REF . arg_val

    BOOL    shift, and go to state 2
    CHAR    shift, and go to state 3
    FLOAT   shift, and go to state 4
    INT     shift, and go to state 5
    HOLLOW  shift, and go to state 6

    type     go to state 52
    arg_val  go to state 105


State 56

   92 args_proc: arg_val .

    $default  reduce using rule 92 (args_proc)


State 57

   94 args_proc: arg_ref .

    $default  reduce using rule 94 (args_proc)


State 58

   85 subrout_def: PROC ID '(' args_proc . ')' block
   93 args_proc: args_proc . ',' arg_val
   95          | args_proc . ',' arg_ref

    ','  shift, and go to state 106
    ')'  shift, and go to state 107


State 59

   21 malloc: BORN '(' ID ',' . type ')'

    BOOL    shift, and go to state 2
    CHAR    shift, and go to state 3
    FLOAT   shift, and go to state 4
    INT     shift, and go to state 5
    HOLLOW  shift, and go to state 6

    type  go to state 108


State 60

   22 malloc: PUFF '(' ID ')' .

    $default  reduce using rule 22 (malloc)


State 61

   35 declaration: s_c ID ID NL .

    $default  reduce using rule 35 (declaration)


State 62

   36 dcl_list: declaration .

    $default  reduce using rule 36 (dcl_list)


State 63

   34 declaration: s_c ID '{' dcl_list . '}'
   37 dcl_list: dcl_list . declaration

    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    '}'            shift, and go to state 109

    declaration  go to state 110
    s_c          go to state 18
    type         go to state 19


State 64

   99 literal: NUMBER .

    $default  reduce using rule 99 (literal)


State 65

  100 literal: REAL .

    $default  reduce using rule 100 (literal)


State 66

   66 expr: ID .
   98 subrout_call: ID . '(' args_list ')'

    '('  shift, and go to state 111

    $default  reduce using rule 66 (expr)


State 67

  101 literal: CHARACTER .

    $default  reduce using rule 101 (literal)


State 68

  103 literal: JFALSE .

    $default  reduce using rule 103 (literal)


State 69

  102 literal: JTRUE .

    $default  reduce using rule 102 (literal)


State 70

  104 literal: JNULL .

    $default  reduce using rule 104 (literal)


State 71

   73 expr: '-' . expr

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 112
    subrout_call  go to state 76
    literal       go to state 77


State 72

   74 expr: '(' . expr ')'

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 113
    subrout_call  go to state 76
    literal       go to state 77


State 73

   75 expr: '~' . expr

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 114
    subrout_call  go to state 76
    literal       go to state 77


State 74

   58 expr: declaration .

    $default  reduce using rule 58 (expr)


State 75

   30 declaration: type ID '=' expr . NL
   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr

    NL       shift, and go to state 115
    LTOE     shift, and go to state 116
    GTOE     shift, and go to state 117
    EQUAL    shift, and go to state 118
    UNEQUAL  shift, and go to state 119
    AND      shift, and go to state 120
    OR       shift, and go to state 121
    '>'      shift, and go to state 122
    '<'      shift, and go to state 123
    '+'      shift, and go to state 124
    '-'      shift, and go to state 125
    '*'      shift, and go to state 126
    '/'      shift, and go to state 127
    '%'      shift, and go to state 128


State 76

   67 expr: subrout_call .

    $default  reduce using rule 67 (expr)


State 77

   65 expr: literal .

    $default  reduce using rule 65 (expr)


State 78

   42 dimension: '[' NUMBER . ']'

    ']'  shift, and go to state 129


State 79

   31 declaration: type ID dimension NL .

    $default  reduce using rule 31 (declaration)


State 80

   32 declaration: type ID dimension '=' . expr NL

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 130
    subrout_call  go to state 76
    literal       go to state 77


State 81

   43 dimension: dimension '[' . NUMBER ']'

    NUMBER  shift, and go to state 131


State 82

   33 declaration: type point_d ID NL .

    $default  reduce using rule 33 (declaration)


State 83

   49 assignment: ID . '=' expr
   50           | ID . PLUS_ASSIGN expr
   51           | ID . MINUS_ASSIGN expr
   52           | ID . MULT_ASSIGN expr
   53           | ID . DIV_ASSIGN expr

    PLUS_ASSIGN   shift, and go to state 132
    MINUS_ASSIGN  shift, and go to state 133
    MULT_ASSIGN   shift, and go to state 134
    DIV_ASSIGN    shift, and go to state 135
    '='           shift, and go to state 136


State 84

   59 selection: IF . expr block elif_stm ELSE block
   60          | IF . expr block elif_stm
   61          | IF . expr block ELSE block
   62          | IF . expr block

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 137
    subrout_call  go to state 76
    literal       go to state 77


State 85

   55 iteration: FOR . for_args TO for_args block
   56          | FOR . for_args TO for_args STEP NUMBER block

    $default  reduce using rule 57 (for_args)

    for_args  go to state 138


State 86

   54 iteration: WHILE . expr block

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 139
    subrout_call  go to state 76
    literal       go to state 77


State 87

   26 jump: BREAK .

    $default  reduce using rule 26 (jump)


State 88

   25 jump: NEXT .

    $default  reduce using rule 25 (jump)


State 89

   27 jump: RETURN .
   28     | RETURN . expr

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    $default  reduce using rule 27 (jump)

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 140
    subrout_call  go to state 76
    literal       go to state 77


State 90

   23 io_inst: READ . STRING ',' ID

    STRING  shift, and go to state 141


State 91

   24 io_inst: WRITE . STRING

    STRING  shift, and go to state 142


State 92

   14 instruction: block .

    $default  reduce using rule 14 (instruction)


State 93

   10 block: e '{' NL ins_list . '}'
   12 ins_list: ins_list . instruction

    ID             shift, and go to state 83
    NL             shift, and go to state 21
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    IF             shift, and go to state 84
    FOR            shift, and go to state 85
    WHILE          shift, and go to state 86
    BREAK          shift, and go to state 87
    NEXT           shift, and go to state 88
    RETURN         shift, and go to state 89
    BORN           shift, and go to state 11
    PUFF           shift, and go to state 12
    READ           shift, and go to state 90
    WRITE          shift, and go to state 91
    '}'            shift, and go to state 143

    $default  reduce using rule 3 (e)

    e            go to state 22
    block        go to state 92
    instruction  go to state 144
    malloc       go to state 95
    io_inst      go to state 96
    jump         go to state 97
    declaration  go to state 98
    s_c          go to state 18
    type         go to state 19
    assignment   go to state 99
    iteration    go to state 100
    selection    go to state 101


State 94

   11 ins_list: instruction .

    $default  reduce using rule 11 (ins_list)


State 95

   20 instruction: malloc . NL

    NL  shift, and go to state 145


State 96

   19 instruction: io_inst . NL

    NL  shift, and go to state 146


State 97

   18 instruction: jump . NL

    NL  shift, and go to state 147


State 98

   13 instruction: declaration .

    $default  reduce using rule 13 (instruction)


State 99

   17 instruction: assignment . NL

    NL  shift, and go to state 148


State 100

   16 instruction: iteration .

    $default  reduce using rule 16 (instruction)


State 101

   15 instruction: selection .

    $default  reduce using rule 15 (instruction)


State 102

   86 arg_val: type ID .

    $default  reduce using rule 86 (arg_val)


State 103

   90 args_func: args_func ',' . arg_val

    BOOL    shift, and go to state 2
    CHAR    shift, and go to state 3
    FLOAT   shift, and go to state 4
    INT     shift, and go to state 5
    HOLLOW  shift, and go to state 6

    type     go to state 52
    arg_val  go to state 149


State 104

   84 subrout_def: FUNC ID '(' args_func ')' . ARROW type block

    ARROW  shift, and go to state 150


State 105

   87 arg_ref: REF arg_val .

    $default  reduce using rule 87 (arg_ref)


State 106

   93 args_proc: args_proc ',' . arg_val
   95          | args_proc ',' . arg_ref

    BOOL    shift, and go to state 2
    CHAR    shift, and go to state 3
    FLOAT   shift, and go to state 4
    INT     shift, and go to state 5
    HOLLOW  shift, and go to state 6
    REF     shift, and go to state 55

    type     go to state 52
    arg_val  go to state 151
    arg_ref  go to state 152


State 107

   85 subrout_def: PROC ID '(' args_proc ')' . block

    NL  shift, and go to state 21

    $default  reduce using rule 3 (e)

    e      go to state 22
    block  go to state 153


State 108

   21 malloc: BORN '(' ID ',' type . ')'

    ')'  shift, and go to state 154


State 109

   34 declaration: s_c ID '{' dcl_list '}' .

    $default  reduce using rule 34 (declaration)


State 110

   37 dcl_list: dcl_list declaration .

    $default  reduce using rule 37 (dcl_list)


State 111

   98 subrout_call: ID '(' . args_list ')'

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 155
    args_list     go to state 156
    subrout_call  go to state 76
    literal       go to state 77


State 112

   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   73     | '-' expr .
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr

    $default  reduce using rule 73 (expr)


State 113

   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   74     | '(' expr . ')'
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr

    LTOE     shift, and go to state 116
    GTOE     shift, and go to state 117
    EQUAL    shift, and go to state 118
    UNEQUAL  shift, and go to state 119
    AND      shift, and go to state 120
    OR       shift, and go to state 121
    '>'      shift, and go to state 122
    '<'      shift, and go to state 123
    '+'      shift, and go to state 124
    '-'      shift, and go to state 125
    '*'      shift, and go to state 126
    '/'      shift, and go to state 127
    '%'      shift, and go to state 128
    ')'      shift, and go to state 157


State 114

   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   75     | '~' expr .
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr

    $default  reduce using rule 75 (expr)


State 115

   30 declaration: type ID '=' expr NL .

    $default  reduce using rule 30 (declaration)


State 116

   78 expr: expr LTOE . expr

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 158
    subrout_call  go to state 76
    literal       go to state 77


State 117

   79 expr: expr GTOE . expr

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 159
    subrout_call  go to state 76
    literal       go to state 77


State 118

   80 expr: expr EQUAL . expr

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 160
    subrout_call  go to state 76
    literal       go to state 77


State 119

   81 expr: expr UNEQUAL . expr

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 161
    subrout_call  go to state 76
    literal       go to state 77


State 120

   76 expr: expr AND . expr

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 162
    subrout_call  go to state 76
    literal       go to state 77


State 121

   77 expr: expr OR . expr

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 163
    subrout_call  go to state 76
    literal       go to state 77


State 122

   83 expr: expr '>' . expr

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 164
    subrout_call  go to state 76
    literal       go to state 77


State 123

   82 expr: expr '<' . expr

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 165
    subrout_call  go to state 76
    literal       go to state 77


State 124

   68 expr: expr '+' . expr

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 166
    subrout_call  go to state 76
    literal       go to state 77


State 125

   69 expr: expr '-' . expr

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 167
    subrout_call  go to state 76
    literal       go to state 77


State 126

   70 expr: expr '*' . expr

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 168
    subrout_call  go to state 76
    literal       go to state 77


State 127

   71 expr: expr '/' . expr

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 169
    subrout_call  go to state 76
    literal       go to state 77


State 128

   72 expr: expr '%' . expr

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 170
    subrout_call  go to state 76
    literal       go to state 77


State 129

   42 dimension: '[' NUMBER ']' .

    $default  reduce using rule 42 (dimension)


State 130

   32 declaration: type ID dimension '=' expr . NL
   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr

    NL       shift, and go to state 171
    LTOE     shift, and go to state 116
    GTOE     shift, and go to state 117
    EQUAL    shift, and go to state 118
    UNEQUAL  shift, and go to state 119
    AND      shift, and go to state 120
    OR       shift, and go to state 121
    '>'      shift, and go to state 122
    '<'      shift, and go to state 123
    '+'      shift, and go to state 124
    '-'      shift, and go to state 125
    '*'      shift, and go to state 126
    '/'      shift, and go to state 127
    '%'      shift, and go to state 128


State 131

   43 dimension: dimension '[' NUMBER . ']'

    ']'  shift, and go to state 172


State 132

   50 assignment: ID PLUS_ASSIGN . expr

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 173
    subrout_call  go to state 76
    literal       go to state 77


State 133

   51 assignment: ID MINUS_ASSIGN . expr

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 174
    subrout_call  go to state 76
    literal       go to state 77


State 134

   52 assignment: ID MULT_ASSIGN . expr

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 175
    subrout_call  go to state 76
    literal       go to state 77


State 135

   53 assignment: ID DIV_ASSIGN . expr

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 176
    subrout_call  go to state 76
    literal       go to state 77


State 136

   49 assignment: ID '=' . expr

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 177
    subrout_call  go to state 76
    literal       go to state 77


State 137

   59 selection: IF expr . block elif_stm ELSE block
   60          | IF expr . block elif_stm
   61          | IF expr . block ELSE block
   62          | IF expr . block
   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr

    NL       shift, and go to state 21
    LTOE     shift, and go to state 116
    GTOE     shift, and go to state 117
    EQUAL    shift, and go to state 118
    UNEQUAL  shift, and go to state 119
    AND      shift, and go to state 120
    OR       shift, and go to state 121
    '>'      shift, and go to state 122
    '<'      shift, and go to state 123
    '+'      shift, and go to state 124
    '-'      shift, and go to state 125
    '*'      shift, and go to state 126
    '/'      shift, and go to state 127
    '%'      shift, and go to state 128

    $default  reduce using rule 3 (e)

    e      go to state 22
    block  go to state 178


State 138

   55 iteration: FOR for_args . TO for_args block
   56          | FOR for_args . TO for_args STEP NUMBER block

    TO  shift, and go to state 179


State 139

   54 iteration: WHILE expr . block
   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr

    NL       shift, and go to state 21
    LTOE     shift, and go to state 116
    GTOE     shift, and go to state 117
    EQUAL    shift, and go to state 118
    UNEQUAL  shift, and go to state 119
    AND      shift, and go to state 120
    OR       shift, and go to state 121
    '>'      shift, and go to state 122
    '<'      shift, and go to state 123
    '+'      shift, and go to state 124
    '-'      shift, and go to state 125
    '*'      shift, and go to state 126
    '/'      shift, and go to state 127
    '%'      shift, and go to state 128

    $default  reduce using rule 3 (e)

    e      go to state 22
    block  go to state 180


State 140

   28 jump: RETURN expr .
   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr

    LTOE     shift, and go to state 116
    GTOE     shift, and go to state 117
    EQUAL    shift, and go to state 118
    UNEQUAL  shift, and go to state 119
    AND      shift, and go to state 120
    OR       shift, and go to state 121
    '>'      shift, and go to state 122
    '<'      shift, and go to state 123
    '+'      shift, and go to state 124
    '-'      shift, and go to state 125
    '*'      shift, and go to state 126
    '/'      shift, and go to state 127
    '%'      shift, and go to state 128

    $default  reduce using rule 28 (jump)


State 141

   23 io_inst: READ STRING . ',' ID

    ','  shift, and go to state 181


State 142

   24 io_inst: WRITE STRING .

    $default  reduce using rule 24 (io_inst)


State 143

   10 block: e '{' NL ins_list '}' .

    $default  reduce using rule 10 (block)


State 144

   12 ins_list: ins_list instruction .

    $default  reduce using rule 12 (ins_list)


State 145

   20 instruction: malloc NL .

    $default  reduce using rule 20 (instruction)


State 146

   19 instruction: io_inst NL .

    $default  reduce using rule 19 (instruction)


State 147

   18 instruction: jump NL .

    $default  reduce using rule 18 (instruction)


State 148

   17 instruction: assignment NL .

    $default  reduce using rule 17 (instruction)


State 149

   90 args_func: args_func ',' arg_val .

    $default  reduce using rule 90 (args_func)


State 150

   84 subrout_def: FUNC ID '(' args_func ')' ARROW . type block

    BOOL    shift, and go to state 2
    CHAR    shift, and go to state 3
    FLOAT   shift, and go to state 4
    INT     shift, and go to state 5
    HOLLOW  shift, and go to state 6

    type  go to state 182


State 151

   93 args_proc: args_proc ',' arg_val .

    $default  reduce using rule 93 (args_proc)


State 152

   95 args_proc: args_proc ',' arg_ref .

    $default  reduce using rule 95 (args_proc)


State 153

   85 subrout_def: PROC ID '(' args_proc ')' block .

    $default  reduce using rule 85 (subrout_def)


State 154

   21 malloc: BORN '(' ID ',' type ')' .

    $default  reduce using rule 21 (malloc)


State 155

   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr
   96 args_list: expr .

    LTOE     shift, and go to state 116
    GTOE     shift, and go to state 117
    EQUAL    shift, and go to state 118
    UNEQUAL  shift, and go to state 119
    AND      shift, and go to state 120
    OR       shift, and go to state 121
    '>'      shift, and go to state 122
    '<'      shift, and go to state 123
    '+'      shift, and go to state 124
    '-'      shift, and go to state 125
    '*'      shift, and go to state 126
    '/'      shift, and go to state 127
    '%'      shift, and go to state 128

    $default  reduce using rule 96 (args_list)


State 156

   97 args_list: args_list . ',' expr
   98 subrout_call: ID '(' args_list . ')'

    ','  shift, and go to state 183
    ')'  shift, and go to state 184


State 157

   74 expr: '(' expr ')' .

    $default  reduce using rule 74 (expr)


State 158

   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   78     | expr LTOE expr .
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr

    '+'  shift, and go to state 124
    '-'  shift, and go to state 125
    '*'  shift, and go to state 126
    '/'  shift, and go to state 127
    '%'  shift, and go to state 128

    LTOE  error (nonassociative)
    GTOE  error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 78 (expr)


State 159

   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   79     | expr GTOE expr .
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr

    '+'  shift, and go to state 124
    '-'  shift, and go to state 125
    '*'  shift, and go to state 126
    '/'  shift, and go to state 127
    '%'  shift, and go to state 128

    LTOE  error (nonassociative)
    GTOE  error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 79 (expr)


State 160

   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   80     | expr EQUAL expr .
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr

    LTOE  shift, and go to state 116
    GTOE  shift, and go to state 117
    '>'   shift, and go to state 122
    '<'   shift, and go to state 123
    '+'   shift, and go to state 124
    '-'   shift, and go to state 125
    '*'   shift, and go to state 126
    '/'   shift, and go to state 127
    '%'   shift, and go to state 128

    $default  reduce using rule 80 (expr)


State 161

   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   81     | expr UNEQUAL expr .
   82     | expr . '<' expr
   83     | expr . '>' expr

    LTOE  shift, and go to state 116
    GTOE  shift, and go to state 117
    '>'   shift, and go to state 122
    '<'   shift, and go to state 123
    '+'   shift, and go to state 124
    '-'   shift, and go to state 125
    '*'   shift, and go to state 126
    '/'   shift, and go to state 127
    '%'   shift, and go to state 128

    $default  reduce using rule 81 (expr)


State 162

   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   76     | expr . AND expr
   76     | expr AND expr .
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr

    LTOE     shift, and go to state 116
    GTOE     shift, and go to state 117
    EQUAL    shift, and go to state 118
    UNEQUAL  shift, and go to state 119
    '>'      shift, and go to state 122
    '<'      shift, and go to state 123
    '+'      shift, and go to state 124
    '-'      shift, and go to state 125
    '*'      shift, and go to state 126
    '/'      shift, and go to state 127
    '%'      shift, and go to state 128

    $default  reduce using rule 76 (expr)


State 163

   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   76     | expr . AND expr
   77     | expr . OR expr
   77     | expr OR expr .
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr

    LTOE     shift, and go to state 116
    GTOE     shift, and go to state 117
    EQUAL    shift, and go to state 118
    UNEQUAL  shift, and go to state 119
    AND      shift, and go to state 120
    '>'      shift, and go to state 122
    '<'      shift, and go to state 123
    '+'      shift, and go to state 124
    '-'      shift, and go to state 125
    '*'      shift, and go to state 126
    '/'      shift, and go to state 127
    '%'      shift, and go to state 128

    $default  reduce using rule 77 (expr)


State 164

   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr
   83     | expr '>' expr .

    '+'  shift, and go to state 124
    '-'  shift, and go to state 125
    '*'  shift, and go to state 126
    '/'  shift, and go to state 127
    '%'  shift, and go to state 128

    LTOE  error (nonassociative)
    GTOE  error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 83 (expr)


State 165

   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   82     | expr '<' expr .
   83     | expr . '>' expr

    '+'  shift, and go to state 124
    '-'  shift, and go to state 125
    '*'  shift, and go to state 126
    '/'  shift, and go to state 127
    '%'  shift, and go to state 128

    LTOE  error (nonassociative)
    GTOE  error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 82 (expr)


State 166

   68 expr: expr . '+' expr
   68     | expr '+' expr .
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr

    '*'  shift, and go to state 126
    '/'  shift, and go to state 127
    '%'  shift, and go to state 128

    $default  reduce using rule 68 (expr)


State 167

   68 expr: expr . '+' expr
   69     | expr . '-' expr
   69     | expr '-' expr .
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr

    '*'  shift, and go to state 126
    '/'  shift, and go to state 127
    '%'  shift, and go to state 128

    $default  reduce using rule 69 (expr)


State 168

   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   70     | expr '*' expr .
   71     | expr . '/' expr
   72     | expr . '%' expr
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr

    $default  reduce using rule 70 (expr)


State 169

   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   71     | expr '/' expr .
   72     | expr . '%' expr
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr

    $default  reduce using rule 71 (expr)


State 170

   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   72     | expr '%' expr .
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr

    $default  reduce using rule 72 (expr)


State 171

   32 declaration: type ID dimension '=' expr NL .

    $default  reduce using rule 32 (declaration)


State 172

   43 dimension: dimension '[' NUMBER ']' .

    $default  reduce using rule 43 (dimension)


State 173

   50 assignment: ID PLUS_ASSIGN expr .
   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr

    LTOE     shift, and go to state 116
    GTOE     shift, and go to state 117
    EQUAL    shift, and go to state 118
    UNEQUAL  shift, and go to state 119
    AND      shift, and go to state 120
    OR       shift, and go to state 121
    '>'      shift, and go to state 122
    '<'      shift, and go to state 123
    '+'      shift, and go to state 124
    '-'      shift, and go to state 125
    '*'      shift, and go to state 126
    '/'      shift, and go to state 127
    '%'      shift, and go to state 128

    $default  reduce using rule 50 (assignment)


State 174

   51 assignment: ID MINUS_ASSIGN expr .
   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr

    LTOE     shift, and go to state 116
    GTOE     shift, and go to state 117
    EQUAL    shift, and go to state 118
    UNEQUAL  shift, and go to state 119
    AND      shift, and go to state 120
    OR       shift, and go to state 121
    '>'      shift, and go to state 122
    '<'      shift, and go to state 123
    '+'      shift, and go to state 124
    '-'      shift, and go to state 125
    '*'      shift, and go to state 126
    '/'      shift, and go to state 127
    '%'      shift, and go to state 128

    $default  reduce using rule 51 (assignment)


State 175

   52 assignment: ID MULT_ASSIGN expr .
   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr

    LTOE     shift, and go to state 116
    GTOE     shift, and go to state 117
    EQUAL    shift, and go to state 118
    UNEQUAL  shift, and go to state 119
    AND      shift, and go to state 120
    OR       shift, and go to state 121
    '>'      shift, and go to state 122
    '<'      shift, and go to state 123
    '+'      shift, and go to state 124
    '-'      shift, and go to state 125
    '*'      shift, and go to state 126
    '/'      shift, and go to state 127
    '%'      shift, and go to state 128

    $default  reduce using rule 52 (assignment)


State 176

   53 assignment: ID DIV_ASSIGN expr .
   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr

    LTOE     shift, and go to state 116
    GTOE     shift, and go to state 117
    EQUAL    shift, and go to state 118
    UNEQUAL  shift, and go to state 119
    AND      shift, and go to state 120
    OR       shift, and go to state 121
    '>'      shift, and go to state 122
    '<'      shift, and go to state 123
    '+'      shift, and go to state 124
    '-'      shift, and go to state 125
    '*'      shift, and go to state 126
    '/'      shift, and go to state 127
    '%'      shift, and go to state 128

    $default  reduce using rule 53 (assignment)


State 177

   49 assignment: ID '=' expr .
   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr

    LTOE     shift, and go to state 116
    GTOE     shift, and go to state 117
    EQUAL    shift, and go to state 118
    UNEQUAL  shift, and go to state 119
    AND      shift, and go to state 120
    OR       shift, and go to state 121
    '>'      shift, and go to state 122
    '<'      shift, and go to state 123
    '+'      shift, and go to state 124
    '-'      shift, and go to state 125
    '*'      shift, and go to state 126
    '/'      shift, and go to state 127
    '%'      shift, and go to state 128

    $default  reduce using rule 49 (assignment)


State 178

   59 selection: IF expr block . elif_stm ELSE block
   60          | IF expr block . elif_stm
   61          | IF expr block . ELSE block
   62          | IF expr block .

    ELIF  shift, and go to state 185
    ELSE  shift, and go to state 186

    $default  reduce using rule 62 (selection)

    elif_stm  go to state 187


State 179

   55 iteration: FOR for_args TO . for_args block
   56          | FOR for_args TO . for_args STEP NUMBER block

    $default  reduce using rule 57 (for_args)

    for_args  go to state 188


State 180

   54 iteration: WHILE expr block .

    $default  reduce using rule 54 (iteration)


State 181

   23 io_inst: READ STRING ',' . ID

    ID  shift, and go to state 189


State 182

   84 subrout_def: FUNC ID '(' args_func ')' ARROW type . block

    NL  shift, and go to state 21

    $default  reduce using rule 3 (e)

    e      go to state 22
    block  go to state 190


State 183

   97 args_list: args_list ',' . expr

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 191
    subrout_call  go to state 76
    literal       go to state 77


State 184

   98 subrout_call: ID '(' args_list ')' .

    $default  reduce using rule 98 (subrout_call)


State 185

   63 elif_stm: ELIF . expr block

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 192
    subrout_call  go to state 76
    literal       go to state 77


State 186

   61 selection: IF expr block ELSE . block

    NL  shift, and go to state 21

    $default  reduce using rule 3 (e)

    e      go to state 22
    block  go to state 193


State 187

   59 selection: IF expr block elif_stm . ELSE block
   60          | IF expr block elif_stm .
   64 elif_stm: elif_stm . ELIF expr block

    ELIF  shift, and go to state 194
    ELSE  shift, and go to state 195

    $default  reduce using rule 60 (selection)


State 188

   55 iteration: FOR for_args TO for_args . block
   56          | FOR for_args TO for_args . STEP NUMBER block

    NL    shift, and go to state 21
    STEP  shift, and go to state 196

    $default  reduce using rule 3 (e)

    e      go to state 22
    block  go to state 197


State 189

   23 io_inst: READ STRING ',' ID .

    $default  reduce using rule 23 (io_inst)


State 190

   84 subrout_def: FUNC ID '(' args_func ')' ARROW type block .

    $default  reduce using rule 84 (subrout_def)


State 191

   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr
   97 args_list: args_list ',' expr .

    LTOE     shift, and go to state 116
    GTOE     shift, and go to state 117
    EQUAL    shift, and go to state 118
    UNEQUAL  shift, and go to state 119
    AND      shift, and go to state 120
    OR       shift, and go to state 121
    '>'      shift, and go to state 122
    '<'      shift, and go to state 123
    '+'      shift, and go to state 124
    '-'      shift, and go to state 125
    '*'      shift, and go to state 126
    '/'      shift, and go to state 127
    '%'      shift, and go to state 128

    $default  reduce using rule 97 (args_list)


State 192

   63 elif_stm: ELIF expr . block
   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr

    NL       shift, and go to state 21
    LTOE     shift, and go to state 116
    GTOE     shift, and go to state 117
    EQUAL    shift, and go to state 118
    UNEQUAL  shift, and go to state 119
    AND      shift, and go to state 120
    OR       shift, and go to state 121
    '>'      shift, and go to state 122
    '<'      shift, and go to state 123
    '+'      shift, and go to state 124
    '-'      shift, and go to state 125
    '*'      shift, and go to state 126
    '/'      shift, and go to state 127
    '%'      shift, and go to state 128

    $default  reduce using rule 3 (e)

    e      go to state 22
    block  go to state 198


State 193

   61 selection: IF expr block ELSE block .

    $default  reduce using rule 61 (selection)


State 194

   64 elif_stm: elif_stm ELIF . expr block

    NUMBER         shift, and go to state 64
    REAL           shift, and go to state 65
    ID             shift, and go to state 66
    CHARACTER      shift, and go to state 67
    BOOL           shift, and go to state 2
    CHAR           shift, and go to state 3
    FLOAT          shift, and go to state 4
    INT            shift, and go to state 5
    HOLLOW         shift, and go to state 6
    CONFEDERATION  shift, and go to state 7
    STRUCT         shift, and go to state 8
    JFALSE         shift, and go to state 68
    JTRUE          shift, and go to state 69
    JNULL          shift, and go to state 70
    '-'            shift, and go to state 71
    '('            shift, and go to state 72
    '~'            shift, and go to state 73

    declaration   go to state 74
    s_c           go to state 18
    type          go to state 19
    expr          go to state 199
    subrout_call  go to state 76
    literal       go to state 77


State 195

   59 selection: IF expr block elif_stm ELSE . block

    NL  shift, and go to state 21

    $default  reduce using rule 3 (e)

    e      go to state 22
    block  go to state 200


State 196

   56 iteration: FOR for_args TO for_args STEP . NUMBER block

    NUMBER  shift, and go to state 201


State 197

   55 iteration: FOR for_args TO for_args block .

    $default  reduce using rule 55 (iteration)


State 198

   63 elif_stm: ELIF expr block .

    $default  reduce using rule 63 (elif_stm)


State 199

   64 elif_stm: elif_stm ELIF expr . block
   68 expr: expr . '+' expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   76     | expr . AND expr
   77     | expr . OR expr
   78     | expr . LTOE expr
   79     | expr . GTOE expr
   80     | expr . EQUAL expr
   81     | expr . UNEQUAL expr
   82     | expr . '<' expr
   83     | expr . '>' expr

    NL       shift, and go to state 21
    LTOE     shift, and go to state 116
    GTOE     shift, and go to state 117
    EQUAL    shift, and go to state 118
    UNEQUAL  shift, and go to state 119
    AND      shift, and go to state 120
    OR       shift, and go to state 121
    '>'      shift, and go to state 122
    '<'      shift, and go to state 123
    '+'      shift, and go to state 124
    '-'      shift, and go to state 125
    '*'      shift, and go to state 126
    '/'      shift, and go to state 127
    '%'      shift, and go to state 128

    $default  reduce using rule 3 (e)

    e      go to state 22
    block  go to state 202


State 200

   59 selection: IF expr block elif_stm ELSE block .

    $default  reduce using rule 59 (selection)


State 201

   56 iteration: FOR for_args TO for_args STEP NUMBER . block

    NL  shift, and go to state 21

    $default  reduce using rule 3 (e)

    e      go to state 22
    block  go to state 203


State 202

   64 elif_stm: elif_stm ELIF expr block .

    $default  reduce using rule 64 (elif_stm)


State 203

   56 iteration: FOR for_args TO for_args STEP NUMBER block .

    $default  reduce using rule 56 (iteration)
