Terminals unused in grammar

   STRING
   PROGRAM
   BREAK
   NEXT
   RETURN
   BORN
   PUFF
   READ
   WRITE
   CALL


Grammar

    0 $accept: block $end

    1 block: '{' ins_list '}'
    2      | subrout_def

    3 ins_list: instruction NL
    4         | ins_list NL instruction NL

    5 instruction: declaration
    6            | assignment
    7            | selection
    8            | iteration
    9            | block

   10 declaration: type ID
   11            | type ID '=' expr
   12            | type ID dimension
   13            | type ID dimension '=' expr
   14            | type point_d ID
   15            | s_c ID '{' dcl_list '}'

   16 dcl_list: declaration
   17         | dcl_list declaration

   18 s_c: STRUCT
   19    | CONFEDERATION

   20 point_d: '*'
   21        | point_d '*'

   22 dimension: '[' NUMBER ']'
   23          | dimension '[' NUMBER ']'

   24 type: HOLLOW
   25     | INT
   26     | CHAR
   27     | FLOAT
   28     | BOOL

   29 assignment: ID '=' expr
   30           | ID PLUS_ASSIGN expr
   31           | ID MINUS_ASSIGN expr
   32           | ID MULT_ASSIGN expr
   33           | ID DIV_ASSIGN expr

   34 iteration: WHILE expr block
   35          | FOR for_args TO for_args block
   36          | FOR for_args TO for_args STEP NUMBER block

   37 for_args: %empty

   38 expr: declaration

   39 selection: IF expr block elif_stm ELSE block
   40          | IF expr block elif_stm
   41          | IF expr block ELSE block
   42          | IF expr block

   43 elif_stm: ELIF expr block
   44         | elif_stm ELIF expr block

   45 expr: literal
   46     | ID
   47     | subrout_call
   48     | expr '+' expr
   49     | expr '-' expr
   50     | expr '*' expr
   51     | expr '/' expr
   52     | expr '%' expr
   53     | '-' expr
   54     | '(' expr ')'
   55     | '~' expr
   56     | expr AND expr
   57     | expr OR expr
   58     | expr LTOE expr
   59     | expr GTOE expr
   60     | expr EQUAL expr
   61     | expr UNEQUAL expr
   62     | expr '<' expr
   63     | expr '>' expr

   64 subrout_def: FUNC ID '(' args_func ')' ARROW type block
   65            | PROC ID '(' args_proc ')' block

   66 arg_val: type ID

   67 arg_ref: REF arg_val

   68 args_func: %empty
   69          | arg_val
   70          | args_func ',' arg_val

   71 args_proc: %empty
   72          | arg_val
   73          | args_proc ',' arg_val
   74          | arg_ref
   75          | args_proc ',' arg_ref

   76 args_list: expr
   77          | args_list ',' expr

   78 subrout_call: ID '(' args_list ')'

   79 literal: NUMBER
   80        | REAL
   81        | CHARACTER
   82        | JTRUE
   83        | JFALSE
   84        | JNULL


Terminals, with rules where they appear

$end (0) 0
'%' (37) 52
'(' (40) 54 64 65 78
')' (41) 54 64 65 78
'*' (42) 20 21 50
'+' (43) 48
',' (44) 70 73 75 77
'-' (45) 49 53
'/' (47) 51
'<' (60) 62
'=' (61) 11 13 29
'>' (62) 63
'[' (91) 22 23
']' (93) 22 23
'{' (123) 1 15
'}' (125) 1 15
'~' (126) 55
error (256)
NUMBER (258) 22 23 36 79
REAL (259) 80
ID (260) 10 11 12 13 14 15 29 30 31 32 33 46 64 65 66 78
STRING (261)
CHARACTER (262) 81
PROGRAM (263)
NL (264) 3 4
BOOL (265) 28
CHAR (266) 26
FLOAT (267) 27
INT (268) 25
HOLLOW (269) 24
CONFEDERATION (270) 19
STRUCT (271) 18
IF (272) 39 40 41 42
ELIF (273) 43 44
ELSE (274) 39 41
JFALSE (275) 83
JTRUE (276) 82
JNULL (277) 84
FOR (278) 35 36
WHILE (279) 34
TO (280) 35 36
STEP (281) 36
BREAK (282)
NEXT (283)
FUNC (284) 64
PROC (285) 65
REF (286) 67
RETURN (287)
BORN (288)
PUFF (289)
READ (290)
WRITE (291)
LTOE (292) 58
GTOE (293) 59
EQUAL (294) 60
UNEQUAL (295) 61
AND (296) 56
OR (297) 57
PLUS_ASSIGN (298) 30
MINUS_ASSIGN (299) 31
MULT_ASSIGN (300) 32
DIV_ASSIGN (301) 33
ARROW (302) 64
UNARY (303)
CALL (304)


Nonterminals, with rules where they appear

$accept (66)
    on left: 0
block (67)
    on left: 1 2, on right: 0 9 34 35 36 39 40 41 42 43 44 64 65
ins_list (68)
    on left: 3 4, on right: 1 4
instruction (69)
    on left: 5 6 7 8 9, on right: 3 4
declaration (70)
    on left: 10 11 12 13 14 15, on right: 5 16 17 38
dcl_list (71)
    on left: 16 17, on right: 15 17
s_c (72)
    on left: 18 19, on right: 15
point_d (73)
    on left: 20 21, on right: 14 21
dimension (74)
    on left: 22 23, on right: 12 13 23
type (75)
    on left: 24 25 26 27 28, on right: 10 11 12 13 14 64 66
assignment (76)
    on left: 29 30 31 32 33, on right: 6
iteration (77)
    on left: 34 35 36, on right: 8
for_args (78)
    on left: 37, on right: 35 36
expr (79)
    on left: 38 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
    62 63, on right: 11 13 29 30 31 32 33 34 39 40 41 42 43 44 48 49
    50 51 52 53 54 55 56 57 58 59 60 61 62 63 76 77
selection (80)
    on left: 39 40 41 42, on right: 7
elif_stm (81)
    on left: 43 44, on right: 39 40 44
subrout_def (82)
    on left: 64 65, on right: 2
arg_val (83)
    on left: 66, on right: 67 69 70 72 73
arg_ref (84)
    on left: 67, on right: 74 75
args_func (85)
    on left: 68 69 70, on right: 64 70
args_proc (86)
    on left: 71 72 73 74 75, on right: 65 73 75
args_list (87)
    on left: 76 77, on right: 77 78
subrout_call (88)
    on left: 78, on right: 47
literal (89)
    on left: 79 80 81 82 83 84, on right: 45


State 0

    0 $accept: . block $end

    FUNC  shift, and go to state 1
    PROC  shift, and go to state 2
    '{'   shift, and go to state 3

    block        go to state 4
    subrout_def  go to state 5


State 1

   64 subrout_def: FUNC . ID '(' args_func ')' ARROW type block

    ID  shift, and go to state 6


State 2

   65 subrout_def: PROC . ID '(' args_proc ')' block

    ID  shift, and go to state 7


State 3

    1 block: '{' . ins_list '}'

    ID             shift, and go to state 8
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    IF             shift, and go to state 16
    FOR            shift, and go to state 17
    WHILE          shift, and go to state 18
    FUNC           shift, and go to state 1
    PROC           shift, and go to state 2
    '{'            shift, and go to state 3

    block        go to state 19
    ins_list     go to state 20
    instruction  go to state 21
    declaration  go to state 22
    s_c          go to state 23
    type         go to state 24
    assignment   go to state 25
    iteration    go to state 26
    selection    go to state 27
    subrout_def  go to state 5


State 4

    0 $accept: block . $end

    $end  shift, and go to state 28


State 5

    2 block: subrout_def .

    $default  reduce using rule 2 (block)


State 6

   64 subrout_def: FUNC ID . '(' args_func ')' ARROW type block

    '('  shift, and go to state 29


State 7

   65 subrout_def: PROC ID . '(' args_proc ')' block

    '('  shift, and go to state 30


State 8

   29 assignment: ID . '=' expr
   30           | ID . PLUS_ASSIGN expr
   31           | ID . MINUS_ASSIGN expr
   32           | ID . MULT_ASSIGN expr
   33           | ID . DIV_ASSIGN expr

    PLUS_ASSIGN   shift, and go to state 31
    MINUS_ASSIGN  shift, and go to state 32
    MULT_ASSIGN   shift, and go to state 33
    DIV_ASSIGN    shift, and go to state 34
    '='           shift, and go to state 35


State 9

   28 type: BOOL .

    $default  reduce using rule 28 (type)


State 10

   26 type: CHAR .

    $default  reduce using rule 26 (type)


State 11

   27 type: FLOAT .

    $default  reduce using rule 27 (type)


State 12

   25 type: INT .

    $default  reduce using rule 25 (type)


State 13

   24 type: HOLLOW .

    $default  reduce using rule 24 (type)


State 14

   19 s_c: CONFEDERATION .

    $default  reduce using rule 19 (s_c)


State 15

   18 s_c: STRUCT .

    $default  reduce using rule 18 (s_c)


State 16

   39 selection: IF . expr block elif_stm ELSE block
   40          | IF . expr block elif_stm
   41          | IF . expr block ELSE block
   42          | IF . expr block

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 47
    subrout_call  go to state 48
    literal       go to state 49


State 17

   35 iteration: FOR . for_args TO for_args block
   36          | FOR . for_args TO for_args STEP NUMBER block

    $default  reduce using rule 37 (for_args)

    for_args  go to state 50


State 18

   34 iteration: WHILE . expr block

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 51
    subrout_call  go to state 48
    literal       go to state 49


State 19

    9 instruction: block .

    $default  reduce using rule 9 (instruction)


State 20

    1 block: '{' ins_list . '}'
    4 ins_list: ins_list . NL instruction NL

    NL   shift, and go to state 52
    '}'  shift, and go to state 53


State 21

    3 ins_list: instruction . NL

    NL  shift, and go to state 54


State 22

    5 instruction: declaration .

    $default  reduce using rule 5 (instruction)


State 23

   15 declaration: s_c . ID '{' dcl_list '}'

    ID  shift, and go to state 55


State 24

   10 declaration: type . ID
   11            | type . ID '=' expr
   12            | type . ID dimension
   13            | type . ID dimension '=' expr
   14            | type . point_d ID

    ID   shift, and go to state 56
    '*'  shift, and go to state 57

    point_d  go to state 58


State 25

    6 instruction: assignment .

    $default  reduce using rule 6 (instruction)


State 26

    8 instruction: iteration .

    $default  reduce using rule 8 (instruction)


State 27

    7 instruction: selection .

    $default  reduce using rule 7 (instruction)


State 28

    0 $accept: block $end .

    $default  accept


State 29

   64 subrout_def: FUNC ID '(' . args_func ')' ARROW type block

    BOOL    shift, and go to state 9
    CHAR    shift, and go to state 10
    FLOAT   shift, and go to state 11
    INT     shift, and go to state 12
    HOLLOW  shift, and go to state 13

    $default  reduce using rule 68 (args_func)

    type       go to state 59
    arg_val    go to state 60
    args_func  go to state 61


State 30

   65 subrout_def: PROC ID '(' . args_proc ')' block

    BOOL    shift, and go to state 9
    CHAR    shift, and go to state 10
    FLOAT   shift, and go to state 11
    INT     shift, and go to state 12
    HOLLOW  shift, and go to state 13
    REF     shift, and go to state 62

    $default  reduce using rule 71 (args_proc)

    type       go to state 59
    arg_val    go to state 63
    arg_ref    go to state 64
    args_proc  go to state 65


State 31

   30 assignment: ID PLUS_ASSIGN . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 66
    subrout_call  go to state 48
    literal       go to state 49


State 32

   31 assignment: ID MINUS_ASSIGN . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 67
    subrout_call  go to state 48
    literal       go to state 49


State 33

   32 assignment: ID MULT_ASSIGN . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 68
    subrout_call  go to state 48
    literal       go to state 49


State 34

   33 assignment: ID DIV_ASSIGN . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 69
    subrout_call  go to state 48
    literal       go to state 49


State 35

   29 assignment: ID '=' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 70
    subrout_call  go to state 48
    literal       go to state 49


State 36

   79 literal: NUMBER .

    $default  reduce using rule 79 (literal)


State 37

   80 literal: REAL .

    $default  reduce using rule 80 (literal)


State 38

   46 expr: ID .
   78 subrout_call: ID . '(' args_list ')'

    '('  shift, and go to state 71

    $default  reduce using rule 46 (expr)


State 39

   81 literal: CHARACTER .

    $default  reduce using rule 81 (literal)


State 40

   83 literal: JFALSE .

    $default  reduce using rule 83 (literal)


State 41

   82 literal: JTRUE .

    $default  reduce using rule 82 (literal)


State 42

   84 literal: JNULL .

    $default  reduce using rule 84 (literal)


State 43

   53 expr: '-' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 72
    subrout_call  go to state 48
    literal       go to state 49


State 44

   54 expr: '(' . expr ')'

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 73
    subrout_call  go to state 48
    literal       go to state 49


State 45

   55 expr: '~' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 74
    subrout_call  go to state 48
    literal       go to state 49


State 46

   38 expr: declaration .

    $default  reduce using rule 38 (expr)


State 47

   39 selection: IF expr . block elif_stm ELSE block
   40          | IF expr . block elif_stm
   41          | IF expr . block ELSE block
   42          | IF expr . block
   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr

    FUNC     shift, and go to state 1
    PROC     shift, and go to state 2
    LTOE     shift, and go to state 75
    GTOE     shift, and go to state 76
    EQUAL    shift, and go to state 77
    UNEQUAL  shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    '>'      shift, and go to state 81
    '<'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86
    '%'      shift, and go to state 87
    '{'      shift, and go to state 3

    block        go to state 88
    subrout_def  go to state 5


State 48

   47 expr: subrout_call .

    $default  reduce using rule 47 (expr)


State 49

   45 expr: literal .

    $default  reduce using rule 45 (expr)


State 50

   35 iteration: FOR for_args . TO for_args block
   36          | FOR for_args . TO for_args STEP NUMBER block

    TO  shift, and go to state 89


State 51

   34 iteration: WHILE expr . block
   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr

    FUNC     shift, and go to state 1
    PROC     shift, and go to state 2
    LTOE     shift, and go to state 75
    GTOE     shift, and go to state 76
    EQUAL    shift, and go to state 77
    UNEQUAL  shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    '>'      shift, and go to state 81
    '<'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86
    '%'      shift, and go to state 87
    '{'      shift, and go to state 3

    block        go to state 90
    subrout_def  go to state 5


State 52

    4 ins_list: ins_list NL . instruction NL

    ID             shift, and go to state 8
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    IF             shift, and go to state 16
    FOR            shift, and go to state 17
    WHILE          shift, and go to state 18
    FUNC           shift, and go to state 1
    PROC           shift, and go to state 2
    '{'            shift, and go to state 3

    block        go to state 19
    instruction  go to state 91
    declaration  go to state 22
    s_c          go to state 23
    type         go to state 24
    assignment   go to state 25
    iteration    go to state 26
    selection    go to state 27
    subrout_def  go to state 5


State 53

    1 block: '{' ins_list '}' .

    $default  reduce using rule 1 (block)


State 54

    3 ins_list: instruction NL .

    $default  reduce using rule 3 (ins_list)


State 55

   15 declaration: s_c ID . '{' dcl_list '}'

    '{'  shift, and go to state 92


State 56

   10 declaration: type ID .
   11            | type ID . '=' expr
   12            | type ID . dimension
   13            | type ID . dimension '=' expr

    '='  shift, and go to state 93
    '['  shift, and go to state 94

    $default  reduce using rule 10 (declaration)

    dimension  go to state 95


State 57

   20 point_d: '*' .

    $default  reduce using rule 20 (point_d)


State 58

   14 declaration: type point_d . ID
   21 point_d: point_d . '*'

    ID   shift, and go to state 96
    '*'  shift, and go to state 97


State 59

   66 arg_val: type . ID

    ID  shift, and go to state 98


State 60

   69 args_func: arg_val .

    $default  reduce using rule 69 (args_func)


State 61

   64 subrout_def: FUNC ID '(' args_func . ')' ARROW type block
   70 args_func: args_func . ',' arg_val

    ')'  shift, and go to state 99
    ','  shift, and go to state 100


State 62

   67 arg_ref: REF . arg_val

    BOOL    shift, and go to state 9
    CHAR    shift, and go to state 10
    FLOAT   shift, and go to state 11
    INT     shift, and go to state 12
    HOLLOW  shift, and go to state 13

    type     go to state 59
    arg_val  go to state 101


State 63

   72 args_proc: arg_val .

    $default  reduce using rule 72 (args_proc)


State 64

   74 args_proc: arg_ref .

    $default  reduce using rule 74 (args_proc)


State 65

   65 subrout_def: PROC ID '(' args_proc . ')' block
   73 args_proc: args_proc . ',' arg_val
   75          | args_proc . ',' arg_ref

    ')'  shift, and go to state 102
    ','  shift, and go to state 103


State 66

   30 assignment: ID PLUS_ASSIGN expr .
   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr

    LTOE     shift, and go to state 75
    GTOE     shift, and go to state 76
    EQUAL    shift, and go to state 77
    UNEQUAL  shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    '>'      shift, and go to state 81
    '<'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86
    '%'      shift, and go to state 87

    $default  reduce using rule 30 (assignment)


State 67

   31 assignment: ID MINUS_ASSIGN expr .
   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr

    LTOE     shift, and go to state 75
    GTOE     shift, and go to state 76
    EQUAL    shift, and go to state 77
    UNEQUAL  shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    '>'      shift, and go to state 81
    '<'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86
    '%'      shift, and go to state 87

    $default  reduce using rule 31 (assignment)


State 68

   32 assignment: ID MULT_ASSIGN expr .
   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr

    LTOE     shift, and go to state 75
    GTOE     shift, and go to state 76
    EQUAL    shift, and go to state 77
    UNEQUAL  shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    '>'      shift, and go to state 81
    '<'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86
    '%'      shift, and go to state 87

    $default  reduce using rule 32 (assignment)


State 69

   33 assignment: ID DIV_ASSIGN expr .
   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr

    LTOE     shift, and go to state 75
    GTOE     shift, and go to state 76
    EQUAL    shift, and go to state 77
    UNEQUAL  shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    '>'      shift, and go to state 81
    '<'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86
    '%'      shift, and go to state 87

    $default  reduce using rule 33 (assignment)


State 70

   29 assignment: ID '=' expr .
   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr

    LTOE     shift, and go to state 75
    GTOE     shift, and go to state 76
    EQUAL    shift, and go to state 77
    UNEQUAL  shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    '>'      shift, and go to state 81
    '<'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86
    '%'      shift, and go to state 87

    $default  reduce using rule 29 (assignment)


State 71

   78 subrout_call: ID '(' . args_list ')'

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 104
    args_list     go to state 105
    subrout_call  go to state 48
    literal       go to state 49


State 72

   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   53     | '-' expr .
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr

    $default  reduce using rule 53 (expr)


State 73

   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   54     | '(' expr . ')'
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr

    LTOE     shift, and go to state 75
    GTOE     shift, and go to state 76
    EQUAL    shift, and go to state 77
    UNEQUAL  shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    '>'      shift, and go to state 81
    '<'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86
    '%'      shift, and go to state 87
    ')'      shift, and go to state 106


State 74

   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   55     | '~' expr .
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr

    $default  reduce using rule 55 (expr)


State 75

   58 expr: expr LTOE . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 107
    subrout_call  go to state 48
    literal       go to state 49


State 76

   59 expr: expr GTOE . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 108
    subrout_call  go to state 48
    literal       go to state 49


State 77

   60 expr: expr EQUAL . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 109
    subrout_call  go to state 48
    literal       go to state 49


State 78

   61 expr: expr UNEQUAL . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 110
    subrout_call  go to state 48
    literal       go to state 49


State 79

   56 expr: expr AND . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 111
    subrout_call  go to state 48
    literal       go to state 49


State 80

   57 expr: expr OR . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 112
    subrout_call  go to state 48
    literal       go to state 49


State 81

   63 expr: expr '>' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 113
    subrout_call  go to state 48
    literal       go to state 49


State 82

   62 expr: expr '<' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 114
    subrout_call  go to state 48
    literal       go to state 49


State 83

   48 expr: expr '+' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 115
    subrout_call  go to state 48
    literal       go to state 49


State 84

   49 expr: expr '-' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 116
    subrout_call  go to state 48
    literal       go to state 49


State 85

   50 expr: expr '*' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 117
    subrout_call  go to state 48
    literal       go to state 49


State 86

   51 expr: expr '/' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 118
    subrout_call  go to state 48
    literal       go to state 49


State 87

   52 expr: expr '%' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 119
    subrout_call  go to state 48
    literal       go to state 49


State 88

   39 selection: IF expr block . elif_stm ELSE block
   40          | IF expr block . elif_stm
   41          | IF expr block . ELSE block
   42          | IF expr block .

    ELIF  shift, and go to state 120
    ELSE  shift, and go to state 121

    $default  reduce using rule 42 (selection)

    elif_stm  go to state 122


State 89

   35 iteration: FOR for_args TO . for_args block
   36          | FOR for_args TO . for_args STEP NUMBER block

    $default  reduce using rule 37 (for_args)

    for_args  go to state 123


State 90

   34 iteration: WHILE expr block .

    $default  reduce using rule 34 (iteration)


State 91

    4 ins_list: ins_list NL instruction . NL

    NL  shift, and go to state 124


State 92

   15 declaration: s_c ID '{' . dcl_list '}'

    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15

    declaration  go to state 125
    dcl_list     go to state 126
    s_c          go to state 23
    type         go to state 24


State 93

   11 declaration: type ID '=' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 127
    subrout_call  go to state 48
    literal       go to state 49


State 94

   22 dimension: '[' . NUMBER ']'

    NUMBER  shift, and go to state 128


State 95

   12 declaration: type ID dimension .
   13            | type ID dimension . '=' expr
   23 dimension: dimension . '[' NUMBER ']'

    '='  shift, and go to state 129
    '['  shift, and go to state 130

    $default  reduce using rule 12 (declaration)


State 96

   14 declaration: type point_d ID .

    $default  reduce using rule 14 (declaration)


State 97

   21 point_d: point_d '*' .

    $default  reduce using rule 21 (point_d)


State 98

   66 arg_val: type ID .

    $default  reduce using rule 66 (arg_val)


State 99

   64 subrout_def: FUNC ID '(' args_func ')' . ARROW type block

    ARROW  shift, and go to state 131


State 100

   70 args_func: args_func ',' . arg_val

    BOOL    shift, and go to state 9
    CHAR    shift, and go to state 10
    FLOAT   shift, and go to state 11
    INT     shift, and go to state 12
    HOLLOW  shift, and go to state 13

    type     go to state 59
    arg_val  go to state 132


State 101

   67 arg_ref: REF arg_val .

    $default  reduce using rule 67 (arg_ref)


State 102

   65 subrout_def: PROC ID '(' args_proc ')' . block

    FUNC  shift, and go to state 1
    PROC  shift, and go to state 2
    '{'   shift, and go to state 3

    block        go to state 133
    subrout_def  go to state 5


State 103

   73 args_proc: args_proc ',' . arg_val
   75          | args_proc ',' . arg_ref

    BOOL    shift, and go to state 9
    CHAR    shift, and go to state 10
    FLOAT   shift, and go to state 11
    INT     shift, and go to state 12
    HOLLOW  shift, and go to state 13
    REF     shift, and go to state 62

    type     go to state 59
    arg_val  go to state 134
    arg_ref  go to state 135


State 104

   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   76 args_list: expr .

    LTOE     shift, and go to state 75
    GTOE     shift, and go to state 76
    EQUAL    shift, and go to state 77
    UNEQUAL  shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    '>'      shift, and go to state 81
    '<'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86
    '%'      shift, and go to state 87

    $default  reduce using rule 76 (args_list)


State 105

   77 args_list: args_list . ',' expr
   78 subrout_call: ID '(' args_list . ')'

    ')'  shift, and go to state 136
    ','  shift, and go to state 137


State 106

   54 expr: '(' expr ')' .

    $default  reduce using rule 54 (expr)


State 107

   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   58     | expr LTOE expr .
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    LTOE  error (nonassociative)
    GTOE  error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 58 (expr)


State 108

   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   59     | expr GTOE expr .
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    LTOE  error (nonassociative)
    GTOE  error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 59 (expr)


State 109

   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   60     | expr EQUAL expr .
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr

    LTOE  shift, and go to state 75
    GTOE  shift, and go to state 76
    '>'   shift, and go to state 81
    '<'   shift, and go to state 82
    '+'   shift, and go to state 83
    '-'   shift, and go to state 84
    '*'   shift, and go to state 85
    '/'   shift, and go to state 86
    '%'   shift, and go to state 87

    $default  reduce using rule 60 (expr)


State 110

   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   61     | expr UNEQUAL expr .
   62     | expr . '<' expr
   63     | expr . '>' expr

    LTOE  shift, and go to state 75
    GTOE  shift, and go to state 76
    '>'   shift, and go to state 81
    '<'   shift, and go to state 82
    '+'   shift, and go to state 83
    '-'   shift, and go to state 84
    '*'   shift, and go to state 85
    '/'   shift, and go to state 86
    '%'   shift, and go to state 87

    $default  reduce using rule 61 (expr)


State 111

   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   56     | expr . AND expr
   56     | expr AND expr .
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr

    LTOE     shift, and go to state 75
    GTOE     shift, and go to state 76
    EQUAL    shift, and go to state 77
    UNEQUAL  shift, and go to state 78
    '>'      shift, and go to state 81
    '<'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86
    '%'      shift, and go to state 87

    $default  reduce using rule 56 (expr)


State 112

   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   56     | expr . AND expr
   57     | expr . OR expr
   57     | expr OR expr .
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr

    LTOE     shift, and go to state 75
    GTOE     shift, and go to state 76
    EQUAL    shift, and go to state 77
    UNEQUAL  shift, and go to state 78
    AND      shift, and go to state 79
    '>'      shift, and go to state 81
    '<'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86
    '%'      shift, and go to state 87

    $default  reduce using rule 57 (expr)


State 113

   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   63     | expr '>' expr .

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    LTOE  error (nonassociative)
    GTOE  error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 63 (expr)


State 114

   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   62     | expr '<' expr .
   63     | expr . '>' expr

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    LTOE  error (nonassociative)
    GTOE  error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 62 (expr)


State 115

   48 expr: expr . '+' expr
   48     | expr '+' expr .
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 48 (expr)


State 116

   48 expr: expr . '+' expr
   49     | expr . '-' expr
   49     | expr '-' expr .
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 49 (expr)


State 117

   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   50     | expr '*' expr .
   51     | expr . '/' expr
   52     | expr . '%' expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr

    $default  reduce using rule 50 (expr)


State 118

   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   51     | expr '/' expr .
   52     | expr . '%' expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr

    $default  reduce using rule 51 (expr)


State 119

   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   52     | expr '%' expr .
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr

    $default  reduce using rule 52 (expr)


State 120

   43 elif_stm: ELIF . expr block

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 138
    subrout_call  go to state 48
    literal       go to state 49


State 121

   41 selection: IF expr block ELSE . block

    FUNC  shift, and go to state 1
    PROC  shift, and go to state 2
    '{'   shift, and go to state 3

    block        go to state 139
    subrout_def  go to state 5


State 122

   39 selection: IF expr block elif_stm . ELSE block
   40          | IF expr block elif_stm .
   44 elif_stm: elif_stm . ELIF expr block

    ELIF  shift, and go to state 140
    ELSE  shift, and go to state 141

    $default  reduce using rule 40 (selection)


State 123

   35 iteration: FOR for_args TO for_args . block
   36          | FOR for_args TO for_args . STEP NUMBER block

    STEP  shift, and go to state 142
    FUNC  shift, and go to state 1
    PROC  shift, and go to state 2
    '{'   shift, and go to state 3

    block        go to state 143
    subrout_def  go to state 5


State 124

    4 ins_list: ins_list NL instruction NL .

    $default  reduce using rule 4 (ins_list)


State 125

   16 dcl_list: declaration .

    $default  reduce using rule 16 (dcl_list)


State 126

   15 declaration: s_c ID '{' dcl_list . '}'
   17 dcl_list: dcl_list . declaration

    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    '}'            shift, and go to state 144

    declaration  go to state 145
    s_c          go to state 23
    type         go to state 24


State 127

   11 declaration: type ID '=' expr .
   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr

    LTOE     shift, and go to state 75
    GTOE     shift, and go to state 76
    EQUAL    shift, and go to state 77
    UNEQUAL  shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    '>'      shift, and go to state 81
    '<'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86
    '%'      shift, and go to state 87

    $default  reduce using rule 11 (declaration)


State 128

   22 dimension: '[' NUMBER . ']'

    ']'  shift, and go to state 146


State 129

   13 declaration: type ID dimension '=' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 147
    subrout_call  go to state 48
    literal       go to state 49


State 130

   23 dimension: dimension '[' . NUMBER ']'

    NUMBER  shift, and go to state 148


State 131

   64 subrout_def: FUNC ID '(' args_func ')' ARROW . type block

    BOOL    shift, and go to state 9
    CHAR    shift, and go to state 10
    FLOAT   shift, and go to state 11
    INT     shift, and go to state 12
    HOLLOW  shift, and go to state 13

    type  go to state 149


State 132

   70 args_func: args_func ',' arg_val .

    $default  reduce using rule 70 (args_func)


State 133

   65 subrout_def: PROC ID '(' args_proc ')' block .

    $default  reduce using rule 65 (subrout_def)


State 134

   73 args_proc: args_proc ',' arg_val .

    $default  reduce using rule 73 (args_proc)


State 135

   75 args_proc: args_proc ',' arg_ref .

    $default  reduce using rule 75 (args_proc)


State 136

   78 subrout_call: ID '(' args_list ')' .

    $default  reduce using rule 78 (subrout_call)


State 137

   77 args_list: args_list ',' . expr

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 150
    subrout_call  go to state 48
    literal       go to state 49


State 138

   43 elif_stm: ELIF expr . block
   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr

    FUNC     shift, and go to state 1
    PROC     shift, and go to state 2
    LTOE     shift, and go to state 75
    GTOE     shift, and go to state 76
    EQUAL    shift, and go to state 77
    UNEQUAL  shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    '>'      shift, and go to state 81
    '<'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86
    '%'      shift, and go to state 87
    '{'      shift, and go to state 3

    block        go to state 151
    subrout_def  go to state 5


State 139

   41 selection: IF expr block ELSE block .

    $default  reduce using rule 41 (selection)


State 140

   44 elif_stm: elif_stm ELIF . expr block

    NUMBER         shift, and go to state 36
    REAL           shift, and go to state 37
    ID             shift, and go to state 38
    CHARACTER      shift, and go to state 39
    BOOL           shift, and go to state 9
    CHAR           shift, and go to state 10
    FLOAT          shift, and go to state 11
    INT            shift, and go to state 12
    HOLLOW         shift, and go to state 13
    CONFEDERATION  shift, and go to state 14
    STRUCT         shift, and go to state 15
    JFALSE         shift, and go to state 40
    JTRUE          shift, and go to state 41
    JNULL          shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '~'            shift, and go to state 45

    declaration   go to state 46
    s_c           go to state 23
    type          go to state 24
    expr          go to state 152
    subrout_call  go to state 48
    literal       go to state 49


State 141

   39 selection: IF expr block elif_stm ELSE . block

    FUNC  shift, and go to state 1
    PROC  shift, and go to state 2
    '{'   shift, and go to state 3

    block        go to state 153
    subrout_def  go to state 5


State 142

   36 iteration: FOR for_args TO for_args STEP . NUMBER block

    NUMBER  shift, and go to state 154


State 143

   35 iteration: FOR for_args TO for_args block .

    $default  reduce using rule 35 (iteration)


State 144

   15 declaration: s_c ID '{' dcl_list '}' .

    $default  reduce using rule 15 (declaration)


State 145

   17 dcl_list: dcl_list declaration .

    $default  reduce using rule 17 (dcl_list)


State 146

   22 dimension: '[' NUMBER ']' .

    $default  reduce using rule 22 (dimension)


State 147

   13 declaration: type ID dimension '=' expr .
   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr

    LTOE     shift, and go to state 75
    GTOE     shift, and go to state 76
    EQUAL    shift, and go to state 77
    UNEQUAL  shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    '>'      shift, and go to state 81
    '<'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86
    '%'      shift, and go to state 87

    $default  reduce using rule 13 (declaration)


State 148

   23 dimension: dimension '[' NUMBER . ']'

    ']'  shift, and go to state 155


State 149

   64 subrout_def: FUNC ID '(' args_func ')' ARROW type . block

    FUNC  shift, and go to state 1
    PROC  shift, and go to state 2
    '{'   shift, and go to state 3

    block        go to state 156
    subrout_def  go to state 5


State 150

   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr
   77 args_list: args_list ',' expr .

    LTOE     shift, and go to state 75
    GTOE     shift, and go to state 76
    EQUAL    shift, and go to state 77
    UNEQUAL  shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    '>'      shift, and go to state 81
    '<'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86
    '%'      shift, and go to state 87

    $default  reduce using rule 77 (args_list)


State 151

   43 elif_stm: ELIF expr block .

    $default  reduce using rule 43 (elif_stm)


State 152

   44 elif_stm: elif_stm ELIF expr . block
   48 expr: expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | expr . LTOE expr
   59     | expr . GTOE expr
   60     | expr . EQUAL expr
   61     | expr . UNEQUAL expr
   62     | expr . '<' expr
   63     | expr . '>' expr

    FUNC     shift, and go to state 1
    PROC     shift, and go to state 2
    LTOE     shift, and go to state 75
    GTOE     shift, and go to state 76
    EQUAL    shift, and go to state 77
    UNEQUAL  shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    '>'      shift, and go to state 81
    '<'      shift, and go to state 82
    '+'      shift, and go to state 83
    '-'      shift, and go to state 84
    '*'      shift, and go to state 85
    '/'      shift, and go to state 86
    '%'      shift, and go to state 87
    '{'      shift, and go to state 3

    block        go to state 157
    subrout_def  go to state 5


State 153

   39 selection: IF expr block elif_stm ELSE block .

    $default  reduce using rule 39 (selection)


State 154

   36 iteration: FOR for_args TO for_args STEP NUMBER . block

    FUNC  shift, and go to state 1
    PROC  shift, and go to state 2
    '{'   shift, and go to state 3

    block        go to state 158
    subrout_def  go to state 5


State 155

   23 dimension: dimension '[' NUMBER ']' .

    $default  reduce using rule 23 (dimension)


State 156

   64 subrout_def: FUNC ID '(' args_func ')' ARROW type block .

    $default  reduce using rule 64 (subrout_def)


State 157

   44 elif_stm: elif_stm ELIF expr block .

    $default  reduce using rule 44 (elif_stm)


State 158

   36 iteration: FOR for_args TO for_args STEP NUMBER block .

    $default  reduce using rule 36 (iteration)
