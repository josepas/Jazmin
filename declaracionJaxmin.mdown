# Definicion de Jaxmin


Lista de tokens

born puff 
func return proc 
if elif else 
for to step while 
int char bool float
struct
[ ]
{ }
( )
=
+ -
* / %
-
< <= >= > == !=
/\ \/ ~
# #> <#


# Manejo de Memoria
born
puff 

# Definición de Subrutinas
El lenguaje diferencia entre funciones y procedimientos. Las funciones solo reciben parametros por valor y devuelven un "objeto" mientras que los procedimientos pueden no devolver nada y reciben parametros por valor y por referencia 

las funciones solo usan parametros por valor con return obligatorio
func foo(int i, int j) -> int {
	return i
}

los procedimientos reciben parametros de los dos tipos
proc bar(ref: int i, ref: int j) -> void {
	
}


condicional
Aqui falta decidir si siempre tendremos un else cuando hay elseif

if True {
	
}

if True {
	
} elif False {
	
} else {
	
}

instruccion if exp

Secuenciacion
se toma el salto de linea como separador de instrucciones

Iteracion
while True {
	
}
nos gustaria implementer el break y continue

for i to 5 {
	
} 

for i to 0 step -1 {
	
}

for i in [1..5] {
	
}

Asignacion 
=

Literales

null
True
False
\n
\t  

Tipos
hollow
int
char
float

Variables 
pueden llevar por nombre cualquier cadena que comience con caracter alfabetico y el resto caracteres alfanumericos o el caracter piso

Estructuras
con la palabra reservada struct 
struct Libro {
	
}


Operadores aritmeticos tienen mas precedencia que los que los relacionales
+ -
* / %
- unario

Operadores relacionales tienen mas precedencia que los operadores logicos
< <= >= > == !=


Operadores Lógicos
/\ 
\/
~


Comentarios 
#   
#> 

<#









